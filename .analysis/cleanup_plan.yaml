# Branch Cleanup Plan

# Pre-cleanup Steps
pre_cleanup:
  - action: "backup"
    script: "scripts/backup_branches.sh"
    description: "Create backup bundles for all branches"

# Branches to Remove
remove:
  local:
    - name: "feat/obsolete-feature"
      verification:
        - check: "merged"
          target: "main"
        - check: "backup"
          required: true
  
  remote:
    - name: "origin/deprecated-branch"
      verification:
        - check: "merged"
          target: "main"
        - check: "backup"
          required: true
  
  cache:
    - name: "refs/remotes/origin/old-feature"
      verification:
        - check: "backup"
          required: true

# Cleanup Sequence
cleanup_sequence:
  1:
    action: "verify_backups"
    description: "Ensure all branches are properly backed up"
    command: "ls -l .analysis/backup/*/manifest.yaml"
  
  2:
    action: "remove_local"
    description: "Delete local branches"
    command: "git branch -D feat/obsolete-feature"
    rollback: "git bundle unbundle .analysis/backup/*/feat_obsolete-feature.bundle"
  
  3:
    action: "remove_remote"
    description: "Delete remote branches"
    command: "git push origin --delete deprecated-branch"
    rollback: "git push origin refs/restore/deprecated-branch:deprecated-branch"
  
  4:
    action: "remove_cache"
    description: "Clean up cached remote references"
    command: "git remote prune origin"
    rollback: "git remote update origin"

# Post-cleanup Steps
post_cleanup:
  - action: "verify"
    description: "Verify branch removal"
    command: "git branch -a"
  
  - action: "cleanup_report"
    description: "Generate cleanup report"
    output: ".analysis/cleanup_report.yaml"
