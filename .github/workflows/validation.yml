name: Validation Workflow

on:
  pull_request:
    paths:
      - "helm/**"
      - "kubernetes/**"
      - "config/**"
  workflow_dispatch:

jobs:
  config-validation:
    name: Configuration Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yamllint jsonschema

      - name: Validate YAML files
        run: |
          python scripts/validation/validate_yaml.py
        env:
          CONFIG_PATH: "./config"
          HELM_PATH: "./helm"
          KUBERNETES_PATH: "./kubernetes"

  helm-validation:
    name: Helm Chart Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: "latest"

      - name: Run chart validation
        run: |
          cd helm
          ./validate-charts.sh

      - name: Run Helm template tests
        run: |
          cd helm
          for chart in charts/*/; do
            if [ -d "$chart/templates/tests" ]; then
              echo "Running template tests for $chart"
              helm template test "$chart" --debug --dry-run
            else
              echo "No test templates found in $chart - skipping"
            fi
          done

      - name: Lint Helm charts
        run: |
          cd helm
          helm lint charts/*

  kubernetes-validation:
    name: Kubernetes Manifest Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Pluto
        run: |
          curl -sSL https://github.com/FairwindsOps/pluto/releases/latest/download/pluto_6.16.1_linux_amd64.tar.gz | tar xz
          sudo mv pluto /usr/local/bin/pluto

      - name: Check for Kubernetes API deprecations
        run: |
          echo "Checking for deprecated Kubernetes APIs using Pluto..."
          pluto detect-files -d kubernetes/

      - name: Validate Kubernetes manifests
        run: |
          find kubernetes/ -name "*.yaml" -exec kubectl validate -f {} \;
