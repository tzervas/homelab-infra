# Comprehensive pre-commit hooks for homelab infrastructure
# Run 'uv tool install pre-commit && pre-commit install' to set up
# Run 'pre-commit run --all-files' to run on all files

repos:
  # Phase 1 - Fast Formatters (fix stage)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0 # Updated: Latest stable release
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe] # Allow custom YAML tags (Helm, Ansible)
        exclude: |
          (?x)^(
            helm/.*\.(yaml|yml)$|
            kubernetes/.*\.(yaml|yml)$|
            ansible/.*\.(yaml|yml)$|
            \.gitlab-ci\.yml$|
            \.github/workflows/.*\.(yaml|yml)$|
            config/templates/.*\.(yaml|yml)$
          )
      - id: check-json
        exclude: ^.*\.vscode/.*\.json$
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-added-large-files
        args: [--maxkb=1024]
      - id: detect-private-key
        exclude: |
          (?x)^(
            .*\.template\.yaml$|
            deployments/gitops/argocd/repositories\.yaml$|
            helm/environments/secrets-.*\.yaml\.template$
          )
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: [--fix=lf]

  # Phase 2 - Linters (validate stage)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.7 # Updated: Latest stable release
    hooks:
      - id: ruff
        name: ruff-lint
        args: [--fix, --exit-non-zero-on-fix, --show-fixes] # Safe auto-fixing with verbose output
        types: [python]
        exclude: ^(tests/test_.*\.py|examples/.*\.py|untracked_backup/.*\.py|\.ansible/.*|comprehensive_validation\.py|scripts/testing/integrated_test_orchestrator\.py)$

      - id: ruff-format
        name: ruff-format
        types: [python]
        exclude: ^(examples/.*\.py|untracked_backup/.*\.py)$

  # Phase 3 - Type Checking & Security
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0 # Updated: Latest stable release
    hooks:
      - id: mypy
        args:
          [
            --config-file=mypy.ini,
            --show-error-codes,
            --show-column-numbers,
            --pretty,
            --no-error-summary,
          ]
        additional_dependencies:
          [types-PyYAML>=6.0.12, types-requests>=2.31.0, types-jsonschema>=4.19.0, types-setuptools]
        exclude: ^(tests/test_.*\.py|examples/.*\.py|untracked_backup/.*\.py|\.ansible/.*|comprehensive_validation\.py|scripts/testing/integrated_test_orchestrator\.py)$
        pass_filenames: false # Run on all files for better type checking

  # Python security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6 # Updated: Latest stable release
    hooks:
      - id: bandit
        args: [
            -ll, # LOW severity threshold
            -i, # LOW confidence threshold
            --exclude,
            ".venv,venv,.git,.mypy_cache,.pytest_cache,.ruff_cache,__pycache__,build,dist,*.egg-info,examples,.trunk,docs,untracked_backup",
            --skip,
            "B101,B601,B104,B108,B404,B603,B607,B324", # Skip common false positives + deprecated hashlib
            --format,
            json,
            --output,
            bandit-report.json,
            --recursive,
          ]
        exclude: ^(tests/test_.*\.py|examples/.*\.py|untracked_backup/.*\.py|\.ansible/.*|comprehensive_validation\.py|scripts/testing/integrated_test_orchestrator\.py)$
        types: [python]

  # Shell script linting and formatting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1 # Updated: Latest stable release
    hooks:
      - id: shellcheck
        args: [-e, SC1091, -e, SC2034, -e, SC2086, -e, SC2155] # Ignore common false positives

  # - repo: https://github.com/mvdan/sh
  #   rev: v3.10.0
  #   hooks:
  #     - id: shfmt
  #       args: [-w, -s, -i, '2', -ci]  # Auto-fix shell formatting

  # YAML/JSON formatting and validation
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0 # Updated: Latest non-alpha stable release
    hooks:
      - id: prettier
        types_or: [yaml, json, markdown]
        exclude: ^(helm/.*\.yaml|kubernetes/.*\.yaml|ansible/.*\.yml|.*\.md)$ # Skip specialized files
        args: [--write, --prose-wrap, always, --print-width, "100"]

  # Ansible-specific validation
  - repo: https://github.com/ansible/ansible-lint
    rev: v25.7.0 # Updated: Latest stable release
    hooks:
      - id: ansible-lint
        files: ^ansible/.*\.(yml|yaml)$
        args: [--fix] # Safe auto-fixing for Ansible

  # Kubernetes/Helm YAML validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1 # Updated: Latest stable release
    hooks:
      - id: yamllint
        files: ^(helm/|kubernetes/).*\.(yml|yaml)$
        args: [-d, "relaxed", -d, "{line-length: {max: 120}}"]

  # Terraform formatting and validation
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.99.0 # Updated: Latest stable release
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_tflint
        args: [--args=--only=terraform_deprecated_interpolation]

  # Security scanning with multiple tools
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0 # Updated: Latest stable release
    hooks:
      - id: gitleaks

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0 # Updated: Latest stable release
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: |
          (?x)^(
            .*\.cache/.*|
            node_modules/.*|
            .ruff_cache/.*|
            .mypy_cache/.*|
            .*\.lock|
            .*\.log|
            bandit-report\.json
          )$

  # Documentation linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0 # Updated: Latest stable release
    hooks:
      - id: markdownlint
        args: [--fix, --ignore, "docs/IMPLEMENTATION_SUMMARY.md"] # Safe auto-fixing
        exclude: ^(untracked_backup/|examples/|.*\.template\.md)$

  # Git commit message linting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.3.0 # Updated: Latest stable release
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]

  # Phase 4 - Custom Validation
  - repo: local
    hooks:
      - id: homelab-config-validation
        name: Homelab Configuration Validation
        entry: python3 scripts/testing/config_validator.py
        language: system
        files: ^(helm/|kubernetes/|ansible/).*\.(yml|yaml)$
        exclude: |
          (?x)^(
            kubernetes/keycloak/grafana-keycloak\.yaml$|
            kubernetes/keycloak/jupyterhub-keycloak\.yaml$|
            kubernetes/base/namespaces\.yaml$|
            helm/charts/monitoring/templates/servicemonitors/helm-releases\.yaml$|
            .*\.template\.ya?ml$
          )
        pass_filenames: true

      - id: homelab-security-check
        name: Homelab Security Context Check
        entry:
          python3 scripts/testing/rootless_compatibility.py --deployment-mode auto --log-level WARN
        language: system
        files: ^(helm/.*values.*\.yaml|kubernetes/.*\.yaml)$
        pass_filenames: false

      - id: deployment-script-validation
        name: Deployment Script Validation
        entry: bash -c 'for file in "$@"; do bash -n "$file" || exit 1; done'
        language: system
        files: ^scripts/.*\.sh$
        pass_filenames: true

      - id: helm-template-validation
        name: Helm Template Validation
        entry:
          bash -c 'find helm/charts -name "Chart.yaml" -exec dirname {} \; | xargs -I {} helm lint
          {} 2>/dev/null || true'
        language: system
        files: ^helm/charts/.*\.(yaml|yml)$
        pass_filenames: false

      - id: uv-dependency-check
        name: UV Dependency Security Check
        entry: bash -c 'uv pip compile pyproject.toml --quiet || true'
        language: system
        files: ^pyproject\.toml$
        pass_filenames: false

# Global configuration
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: "3.3.0"

# CI configuration for pre-commit.ci
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks
  autofix_prs: true
  skip:
    [
      mypy,
      bandit,
      terraform_tflint,
      helm-template-validation,
      homelab-config-validation,
      homelab-security-check,
    ]
  parallel: true
  submodules: false # Improve CI performance
