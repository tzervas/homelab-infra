---
# Homelab System-Level Infrastructure Provisioning
# Focuses on server bootstrapping, system configuration, and K3s cluster setup
# Application deployments are handled via Helm charts

- name: Homelab System Infrastructure Provisioning
  hosts: homelab
  gather_facts: yes
  become: yes

  vars:
    deployment_timestamp: "{{ ansible_date_time.iso8601 }}"
    system_tasks: "{{ system_components | default(['bootstrap', 'k3s']) }}"

  pre_tasks:
    - name: Display system provisioning information
      debug:
        msg:
          - "System Provisioning Phase: {{ phase | default('bootstrap') }}"
          - "Target Host: {{ inventory_hostname }}"
          - "Ansible Host: {{ ansible_host }}"
          - "Timestamp: {{ deployment_timestamp }}"
          - "System Tasks: {{ system_tasks | join(', ') }}"
          - "Note: Application deployments are handled via Helm"

    - name: Ensure system directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      loop:
        - /opt/homelab
        - /opt/homelab/logs
        - /opt/homelab/configs
        - /opt/homelab/backups
        - /etc/homelab

    - name: Update system packages (idempotent)
      apt:
        update_cache: yes
        upgrade: safe
        autoremove: yes
        autoclean: yes
      when: "'bootstrap' in system_tasks"
      register: package_update

    - name: Log package update results
      debug:
        msg: "System packages updated: {{ package_update.changed | default(false) }}"

  tasks:
    # System Bootstrap Tasks
    - name: Bootstrap system prerequisites
      include_tasks: playbooks/bootstrap-system.yml
      when: "'bootstrap' in system_tasks"
      tags: [bootstrap, system]

    # VM Creation and Setup (for testing phases)
    - name: Create and configure test VM
      include_tasks: playbooks/create-vm.yml
      when: phase in ['vm-test', 'full-vm-test']
      tags: [vm, testing]

    # K3s Cluster Bootstrap (system-level Kubernetes installation)
    - name: Deploy K3s cluster (system-level)
      include_tasks: playbooks/deploy-k3s-fixed.yml
      when: "'k3s' in system_tasks"
      tags: [k3s, kubernetes, system]

    # System Configuration Tasks
    - name: Configure system-level networking
      include_tasks: playbooks/configure-networking.yml
      when: "'networking' in system_tasks"
      tags: [networking, system]

    # Storage Configuration
    - name: Configure system storage
      include_tasks: playbooks/configure-storage.yml
      when: "'storage' in system_tasks"
      tags: [storage, system]

    # User and SSH Management
    - name: Configure system users and SSH
      include_tasks: playbooks/configure-users.yml
      when: "'users' in system_tasks"
      tags: [users, ssh, system]

    # System Validation
    - name: Validate system configuration
      include_tasks: playbooks/validate-deployment-setup.yml
      when: "'validate' in system_tasks"
      tags: [validation, system]

    # Cleanup Tasks (system-level cleanup)
    - name: Cleanup system resources
      include_tasks: playbooks/cleanup-system.yml
      when: phase in ['cleanup-vm', 'cleanup-bare-metal']
      tags: [cleanup, system]

  post_tasks:
    - name: Log system provisioning completion
      lineinfile:
        path: /opt/homelab/logs/system-provisioning.log
        line: "{{ deployment_timestamp }} - System provisioning '{{ phase | default('bootstrap') }}' completed on {{ inventory_hostname }}"
        create: yes
        mode: '0644'
      when: phase not in ['cleanup-vm', 'cleanup-bare-metal']

    - name: Create system status file
      copy:
        content: |
          # Homelab System Status
          # Generated: {{ deployment_timestamp }}
          # Host: {{ inventory_hostname }}

          SYSTEM_PHASE={{ phase | default('bootstrap') }}
          SYSTEM_TASKS={{ system_tasks | join(',') }}
          PROVISIONING_COMPLETE=true
          K3S_READY={{ 'true' if 'k3s' in system_tasks else 'false' }}
          HELM_READY={{ 'true' if 'k3s' in system_tasks else 'false' }}

          # Next Steps:
          # 1. Deploy applications using Helm charts in ../helm/
          # 2. Configure ingress and networking via Helm
          # 3. Set up monitoring and backup solutions via Helm
        dest: /opt/homelab/system-status.env
        mode: '0644'
      when: phase not in ['cleanup-vm', 'cleanup-bare-metal']

    - name: Display system provisioning summary
      debug:
        msg:
          - "‚úÖ System provisioning '{{ phase | default('bootstrap') }}' completed successfully!"
          - "üìÅ System logs: /opt/homelab/logs/"
          - "üìã System status: /opt/homelab/system-status.env"
          - "üöÄ Ready for Helm-based application deployments"
          - "üìñ Next: Use helm/ directory for application management"
      when: phase not in ['cleanup-vm', 'cleanup-bare-metal']

    - name: Display cleanup summary
      debug:
        msg:
          - "üßπ System cleanup '{{ phase }}' completed successfully!"
          - "üíª System ready for fresh provisioning"
      when: phase in ['cleanup-vm', 'cleanup-bare-metal']
