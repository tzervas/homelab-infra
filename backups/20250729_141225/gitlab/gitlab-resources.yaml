apiVersion: v1
items:
  - apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: "2025-07-29T18:04:52Z"
      generateName: gitlab-69d47cf887-
      labels:
        app: gitlab
        pod-template-hash: 69d47cf887
      name: gitlab-69d47cf887-fgrq8
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-69d47cf887
          uid: dfe81e68-7172-4758-b83c-eca1be13abaa
      resourceVersion: "43585"
      uid: 496113aa-4a9d-43ce-8e30-ae06b556ce4e
    spec:
      containers:
        - env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                external_url 'https://gitlab.homelab.local'
                nginx['listen_port'] = 80
                nginx['listen_https'] = false
                gitlab_rails['gitlab_shell_ssh_port'] = 22

                # Memory optimization settings
                postgresql['shared_buffers'] = "128MB"
                postgresql['max_connections'] = 200

                # Reduce Puma workers and threads
                puma['worker_processes'] = 2
                puma['min_threads'] = 1
                puma['max_threads'] = 8

                # Reduce Sidekiq concurrency
                sidekiq['max_concurrency'] = 10

                # Disable some features during initial setup
                gitlab_rails['monitoring_whitelist'] = ['127.0.0.1/32', '10.0.0.0/8']

                # Optimize GitLab for single-node deployment
                unicorn['worker_processes'] = 2

                # Reduce memory usage
                gitlab_rails['env'] = {
                  'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'
                }

                # Keycloak OAuth2 Integration
                gitlab_rails['omniauth_enabled'] = true
                gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
                gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'openid_connect'
                gitlab_rails['omniauth_block_auto_created_users'] = false
                gitlab_rails['omniauth_auto_link_user'] = ['openid_connect']

                gitlab_rails['omniauth_providers'] = [
                  {
                    'name' => 'openid_connect',
                    'label' => 'Keycloak SSO',
                    'args' => {
                      'name' => 'openid_connect',
                      'scope' => ['openid','profile','email'],
                      'response_type' => 'code',
                      'issuer' => 'https://auth.homelab.local/realms/homelab',
                      'discovery' => true,
                      'client_auth_method' => 'query',
                      'uid_field' => 'preferred_username',
                      'client_options' => {
                        'identifier' => 'homelab-portal',
                        'secret' => 'homelab-portal-secret',
                        'redirect_uri' => 'https://gitlab.homelab.local/users/auth/openid_connect/callback'
                      }
                    }
                  }
                ]

                # Allow automatic user creation from Keycloak
                gitlab_rails['omniauth_external_providers'] = ['openid_connect']
          image: gitlab/gitlab-ce:latest
          imagePullPolicy: Always
          name: gitlab
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 22
              protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 12Gi
            requests:
              cpu: "1"
              memory: 6Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/opt/gitlab
              name: gitlab-data
            - mountPath: /var/log/gitlab
              name: gitlab-logs
            - mountPath: /etc/gitlab
              name: gitlab-config
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-m7z55
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      nodeName: homelab
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: gitlab-data
          persistentVolumeClaim:
            claimName: gitlab-data
        - emptyDir: {}
          name: gitlab-logs
        - emptyDir: {}
          name: gitlab-config
        - name: kube-api-access-m7z55
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-07-29T18:04:52Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-07-29T18:04:54Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-07-29T18:04:54Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-07-29T18:04:52Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://dfc884cdccde19ef5792fe9c4432a7c1ee834ebcce7c846a6b249f2bd6b52c2d
          image: docker.io/gitlab/gitlab-ce:latest
          imageID: docker.io/gitlab/gitlab-ce@sha256:3db5de3ce9fba4511345bb67731a1787e316f73029cdbd309ee947f860d9ff00
          lastState: {}
          name: gitlab
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-07-29T18:04:53Z"
      hostIP: 192.168.16.26
      phase: Running
      podIP: 10.42.0.58
      podIPs:
        - ip: 10.42.0.58
      qosClass: Burstable
      startTime: "2025-07-29T18:04:52Z"
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"gitlab","namespace":"gitlab"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80},{"name":"ssh","port":22,"protocol":"TCP","targetPort":22}],"selector":{"app":"gitlab"}}}
      creationTimestamp: "2025-07-29T00:10:08Z"
      name: gitlab
      namespace: gitlab
      resourceVersion: "4412"
      uid: b0d8cee9-0199-40e2-b937-2542ddbe9295
    spec:
      clusterIP: 10.43.91.45
      clusterIPs:
        - 10.43.91.45
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 80
        - name: ssh
          port: 22
          protocol: TCP
          targetPort: 22
      selector:
        app: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "4"
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"gitlab","namespace":"gitlab"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"gitlab"}},"template":{"metadata":{"labels":{"app":"gitlab"}},"spec":{"containers":[{"env":[{"name":"GITLAB_OMNIBUS_CONFIG","value":"external_url 'https://gitlab.homelab.local'\nnginx['listen_port'] = 80\nnginx['listen_https'] = false\ngitlab_rails['gitlab_shell_ssh_port'] = 22\n\n# Memory optimization settings\npostgresql['shared_buffers'] = \"128MB\"\npostgresql['max_connections'] = 200\n\n# Reduce Puma workers and threads\npuma['worker_processes'] = 2\npuma['min_threads'] = 1\npuma['max_threads'] = 8\n\n# Reduce Sidekiq concurrency\nsidekiq['max_concurrency'] = 10\n\n# Disable some features during initial setup\ngitlab_rails['monitoring_whitelist'] = ['127.0.0.1/32', '10.0.0.0/8']\n\n# Optimize GitLab for single-node deployment\nunicorn['worker_processes'] = 2\n\n# Reduce memory usage\ngitlab_rails['env'] = {\n  'MALLOC_CONF' =\u003e 'dirty_decay_ms:1000,muzzy_decay_ms:1000'\n}\n\n# Keycloak OAuth2 Integration\ngitlab_rails['omniauth_enabled'] = true\ngitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']\ngitlab_rails['omniauth_auto_sign_in_with_provider'] = 'openid_connect'\ngitlab_rails['omniauth_block_auto_created_users'] = false\ngitlab_rails['omniauth_auto_link_user'] = ['openid_connect']\n\ngitlab_rails['omniauth_providers'] = [\n  {\n    'name' =\u003e 'openid_connect',\n    'label' =\u003e 'Keycloak SSO',\n    'args' =\u003e {\n      'name' =\u003e 'openid_connect',\n      'scope' =\u003e ['openid','profile','email'],\n      'response_type' =\u003e 'code',\n      'issuer' =\u003e 'https://auth.homelab.local/realms/homelab',\n      'discovery' =\u003e true,\n      'client_auth_method' =\u003e 'query',\n      'uid_field' =\u003e 'preferred_username',\n      'client_options' =\u003e {\n        'identifier' =\u003e 'homelab-portal',\n        'secret' =\u003e 'homelab-portal-secret',\n        'redirect_uri' =\u003e 'https://gitlab.homelab.local/users/auth/openid_connect/callback'\n      }\n    }\n  }\n]\n\n# Allow automatic user creation from Keycloak\ngitlab_rails['omniauth_external_providers'] = ['openid_connect']\n"}],"image":"gitlab/gitlab-ce:latest","name":"gitlab","ports":[{"containerPort":80},{"containerPort":22}],"resources":{"limits":{"cpu":"2000m","memory":"12Gi"},"requests":{"cpu":"1000m","memory":"6Gi"}},"volumeMounts":[{"mountPath":"/var/opt/gitlab","name":"gitlab-data"},{"mountPath":"/var/log/gitlab","name":"gitlab-logs"},{"mountPath":"/etc/gitlab","name":"gitlab-config"}]}],"volumes":[{"name":"gitlab-data","persistentVolumeClaim":{"claimName":"gitlab-data"}},{"emptyDir":{},"name":"gitlab-logs"},{"emptyDir":{},"name":"gitlab-config"}]}}}}
      creationTimestamp: "2025-07-29T00:10:07Z"
      generation: 4
      name: gitlab
      namespace: gitlab
      resourceVersion: "43600"
      uid: 573cc356-441b-41a2-ba1a-b3a7cfcb2e7a
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: gitlab
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: gitlab
        spec:
          containers:
            - env:
                - name: GITLAB_OMNIBUS_CONFIG
                  value: |
                    external_url 'https://gitlab.homelab.local'
                    nginx['listen_port'] = 80
                    nginx['listen_https'] = false
                    gitlab_rails['gitlab_shell_ssh_port'] = 22

                    # Memory optimization settings
                    postgresql['shared_buffers'] = "128MB"
                    postgresql['max_connections'] = 200

                    # Reduce Puma workers and threads
                    puma['worker_processes'] = 2
                    puma['min_threads'] = 1
                    puma['max_threads'] = 8

                    # Reduce Sidekiq concurrency
                    sidekiq['max_concurrency'] = 10

                    # Disable some features during initial setup
                    gitlab_rails['monitoring_whitelist'] = ['127.0.0.1/32', '10.0.0.0/8']

                    # Optimize GitLab for single-node deployment
                    unicorn['worker_processes'] = 2

                    # Reduce memory usage
                    gitlab_rails['env'] = {
                      'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'
                    }

                    # Keycloak OAuth2 Integration
                    gitlab_rails['omniauth_enabled'] = true
                    gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
                    gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'openid_connect'
                    gitlab_rails['omniauth_block_auto_created_users'] = false
                    gitlab_rails['omniauth_auto_link_user'] = ['openid_connect']

                    gitlab_rails['omniauth_providers'] = [
                      {
                        'name' => 'openid_connect',
                        'label' => 'Keycloak SSO',
                        'args' => {
                          'name' => 'openid_connect',
                          'scope' => ['openid','profile','email'],
                          'response_type' => 'code',
                          'issuer' => 'https://auth.homelab.local/realms/homelab',
                          'discovery' => true,
                          'client_auth_method' => 'query',
                          'uid_field' => 'preferred_username',
                          'client_options' => {
                            'identifier' => 'homelab-portal',
                            'secret' => 'homelab-portal-secret',
                            'redirect_uri' => 'https://gitlab.homelab.local/users/auth/openid_connect/callback'
                          }
                        }
                      }
                    ]

                    # Allow automatic user creation from Keycloak
                    gitlab_rails['omniauth_external_providers'] = ['openid_connect']
              image: gitlab/gitlab-ce:latest
              imagePullPolicy: Always
              name: gitlab
              ports:
                - containerPort: 80
                  protocol: TCP
                - containerPort: 22
                  protocol: TCP
              resources:
                limits:
                  cpu: "2"
                  memory: 12Gi
                requests:
                  cpu: "1"
                  memory: 6Gi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab
                  name: gitlab-data
                - mountPath: /var/log/gitlab
                  name: gitlab-logs
                - mountPath: /etc/gitlab
                  name: gitlab-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: gitlab-data
              persistentVolumeClaim:
                claimName: gitlab-data
            - emptyDir: {}
              name: gitlab-logs
            - emptyDir: {}
              name: gitlab-config
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-07-29T00:28:56Z"
          lastUpdateTime: "2025-07-29T00:28:56Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-07-29T00:10:08Z"
          lastUpdateTime: "2025-07-29T18:04:54Z"
          message: ReplicaSet "gitlab-69d47cf887" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 4
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "1"
      creationTimestamp: "2025-07-29T00:10:07Z"
      generation: 2
      labels:
        app: gitlab
        pod-template-hash: 7bdf897f5f
      name: gitlab-7bdf897f5f
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab
          uid: 573cc356-441b-41a2-ba1a-b3a7cfcb2e7a
      resourceVersion: "5612"
      uid: c8a2184e-2760-4b71-bea2-9fbde5449314
    spec:
      replicas: 0
      selector:
        matchLabels:
          app: gitlab
          pod-template-hash: 7bdf897f5f
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: gitlab
            pod-template-hash: 7bdf897f5f
        spec:
          containers:
            - env:
                - name: GITLAB_OMNIBUS_CONFIG
                  value: |
                    external_url 'https://gitlab.homelab.local'
                    nginx['listen_port'] = 80
                    nginx['listen_https'] = false
                    gitlab_rails['gitlab_shell_ssh_port'] = 22
              image: gitlab/gitlab-ce:latest
              imagePullPolicy: Always
              name: gitlab
              ports:
                - containerPort: 80
                  protocol: TCP
                - containerPort: 22
                  protocol: TCP
              resources:
                limits:
                  cpu: "2"
                  memory: 4Gi
                requests:
                  cpu: "1"
                  memory: 2Gi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab
                  name: gitlab-data
                - mountPath: /var/log/gitlab
                  name: gitlab-logs
                - mountPath: /etc/gitlab
                  name: gitlab-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: gitlab-data
              persistentVolumeClaim:
                claimName: gitlab-data
            - emptyDir: {}
              name: gitlab-logs
            - emptyDir: {}
              name: gitlab-config
    status:
      observedGeneration: 2
      replicas: 0
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "2"
      creationTimestamp: "2025-07-29T00:24:41Z"
      generation: 2
      labels:
        app: gitlab
        pod-template-hash: 5ffbc58d44
      name: gitlab-5ffbc58d44
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab
          uid: 573cc356-441b-41a2-ba1a-b3a7cfcb2e7a
      resourceVersion: "5972"
      uid: 291ee1ef-9bf1-41d8-82a8-d16ef03af3cc
    spec:
      replicas: 0
      selector:
        matchLabels:
          app: gitlab
          pod-template-hash: 5ffbc58d44
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: gitlab
            pod-template-hash: 5ffbc58d44
        spec:
          containers:
            - env:
                - name: GITLAB_OMNIBUS_CONFIG
                  value: |
                    external_url 'https://gitlab.homelab.local'
                    nginx['listen_port'] = 80
                    nginx['listen_https'] = false
                    gitlab_rails['gitlab_shell_ssh_port'] = 22
              image: gitlab/gitlab-ce:latest
              imagePullPolicy: Always
              name: gitlab
              ports:
                - containerPort: 80
                  protocol: TCP
                - containerPort: 22
                  protocol: TCP
              resources:
                limits:
                  cpu: "2"
                  memory: 8Gi
                requests:
                  cpu: "1"
                  memory: 4Gi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab
                  name: gitlab-data
                - mountPath: /var/log/gitlab
                  name: gitlab-logs
                - mountPath: /etc/gitlab
                  name: gitlab-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: gitlab-data
              persistentVolumeClaim:
                claimName: gitlab-data
            - emptyDir: {}
              name: gitlab-logs
            - emptyDir: {}
              name: gitlab-config
    status:
      observedGeneration: 2
      replicas: 0
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "4"
      creationTimestamp: "2025-07-29T18:04:52Z"
      generation: 1
      labels:
        app: gitlab
        pod-template-hash: 69d47cf887
      name: gitlab-69d47cf887
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab
          uid: 573cc356-441b-41a2-ba1a-b3a7cfcb2e7a
      resourceVersion: "43588"
      uid: dfe81e68-7172-4758-b83c-eca1be13abaa
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: gitlab
          pod-template-hash: 69d47cf887
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: gitlab
            pod-template-hash: 69d47cf887
        spec:
          containers:
            - env:
                - name: GITLAB_OMNIBUS_CONFIG
                  value: |
                    external_url 'https://gitlab.homelab.local'
                    nginx['listen_port'] = 80
                    nginx['listen_https'] = false
                    gitlab_rails['gitlab_shell_ssh_port'] = 22

                    # Memory optimization settings
                    postgresql['shared_buffers'] = "128MB"
                    postgresql['max_connections'] = 200

                    # Reduce Puma workers and threads
                    puma['worker_processes'] = 2
                    puma['min_threads'] = 1
                    puma['max_threads'] = 8

                    # Reduce Sidekiq concurrency
                    sidekiq['max_concurrency'] = 10

                    # Disable some features during initial setup
                    gitlab_rails['monitoring_whitelist'] = ['127.0.0.1/32', '10.0.0.0/8']

                    # Optimize GitLab for single-node deployment
                    unicorn['worker_processes'] = 2

                    # Reduce memory usage
                    gitlab_rails['env'] = {
                      'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'
                    }

                    # Keycloak OAuth2 Integration
                    gitlab_rails['omniauth_enabled'] = true
                    gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
                    gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'openid_connect'
                    gitlab_rails['omniauth_block_auto_created_users'] = false
                    gitlab_rails['omniauth_auto_link_user'] = ['openid_connect']

                    gitlab_rails['omniauth_providers'] = [
                      {
                        'name' => 'openid_connect',
                        'label' => 'Keycloak SSO',
                        'args' => {
                          'name' => 'openid_connect',
                          'scope' => ['openid','profile','email'],
                          'response_type' => 'code',
                          'issuer' => 'https://auth.homelab.local/realms/homelab',
                          'discovery' => true,
                          'client_auth_method' => 'query',
                          'uid_field' => 'preferred_username',
                          'client_options' => {
                            'identifier' => 'homelab-portal',
                            'secret' => 'homelab-portal-secret',
                            'redirect_uri' => 'https://gitlab.homelab.local/users/auth/openid_connect/callback'
                          }
                        }
                      }
                    ]

                    # Allow automatic user creation from Keycloak
                    gitlab_rails['omniauth_external_providers'] = ['openid_connect']
              image: gitlab/gitlab-ce:latest
              imagePullPolicy: Always
              name: gitlab
              ports:
                - containerPort: 80
                  protocol: TCP
                - containerPort: 22
                  protocol: TCP
              resources:
                limits:
                  cpu: "2"
                  memory: 12Gi
                requests:
                  cpu: "1"
                  memory: 6Gi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab
                  name: gitlab-data
                - mountPath: /var/log/gitlab
                  name: gitlab-logs
                - mountPath: /etc/gitlab
                  name: gitlab-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: gitlab-data
              persistentVolumeClaim:
                claimName: gitlab-data
            - emptyDir: {}
              name: gitlab-logs
            - emptyDir: {}
              name: gitlab-config
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "3"
      creationTimestamp: "2025-07-29T00:33:11Z"
      generation: 2
      labels:
        app: gitlab
        pod-template-hash: 6bc6984bc4
      name: gitlab-6bc6984bc4
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab
          uid: 573cc356-441b-41a2-ba1a-b3a7cfcb2e7a
      resourceVersion: "43599"
      uid: 579b3059-9d69-42dc-90a5-58e6342f077c
    spec:
      replicas: 0
      selector:
        matchLabels:
          app: gitlab
          pod-template-hash: 6bc6984bc4
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: gitlab
            pod-template-hash: 6bc6984bc4
        spec:
          containers:
            - env:
                - name: GITLAB_OMNIBUS_CONFIG
                  value: |
                    external_url 'https://gitlab.homelab.local'
                    nginx['listen_port'] = 80
                    nginx['listen_https'] = false
                    gitlab_rails['gitlab_shell_ssh_port'] = 22

                    # Memory optimization settings
                    postgresql['shared_buffers'] = "128MB"
                    postgresql['max_connections'] = 200

                    # Reduce Puma workers and threads
                    puma['worker_processes'] = 2
                    puma['min_threads'] = 1
                    puma['max_threads'] = 8

                    # Reduce Sidekiq concurrency
                    sidekiq['max_concurrency'] = 10

                    # Disable some features during initial setup
                    gitlab_rails['monitoring_whitelist'] = ['127.0.0.1/32', '10.0.0.0/8']

                    # Optimize GitLab for single-node deployment
                    unicorn['worker_processes'] = 2

                    # Reduce memory usage
                    gitlab_rails['env'] = {
                      'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'
                    }
              image: gitlab/gitlab-ce:latest
              imagePullPolicy: Always
              name: gitlab
              ports:
                - containerPort: 80
                  protocol: TCP
                - containerPort: 22
                  protocol: TCP
              resources:
                limits:
                  cpu: "2"
                  memory: 12Gi
                requests:
                  cpu: "1"
                  memory: 6Gi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab
                  name: gitlab-data
                - mountPath: /var/log/gitlab
                  name: gitlab-logs
                - mountPath: /etc/gitlab
                  name: gitlab-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: gitlab-data
              persistentVolumeClaim:
                claimName: gitlab-data
            - emptyDir: {}
              name: gitlab-logs
            - emptyDir: {}
              name: gitlab-config
    status:
      observedGeneration: 2
      replicas: 0
  - apiVersion: v1
    data:
      ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKVENDQWN1Z0F3SUJBZ0lSQUtUSWo5bVZ6Sm5OZ0RKNG42dzVHeVl3Q2dZSUtvWkl6ajBFQXdJd2NqRUwKTUFrR0ExVUVCaE1DVlZNeERUQUxCZ05WQkFnVEJFaHZiV1V4RERBS0JnTlZCQWNUQTB4aFlqRVFNQTRHQTFVRQpDaE1IU0c5dFpXeGhZakVmTUIwR0ExVUVDeE1XU0c5dFpXeGhZaUJKYm1aeVlYTjBjblZqZEhWeVpURVRNQkVHCkExVUVBeE1LU0c5dFpXeGhZaUJEUVRBZUZ3MHlOVEEzTWpneU16QXdNekphRncweU5URXdNall5TXpBd016SmEKTUhJeEN6QUpCZ05WQkFZVEFsVlRNUTB3Q3dZRFZRUUlFd1JJYjIxbE1Rd3dDZ1lEVlFRSEV3Tk1ZV0l4RURBTwpCZ05WQkFvVEIwaHZiV1ZzWVdJeEh6QWRCZ05WQkFzVEZraHZiV1ZzWVdJZ1NXNW1jbUZ6ZEhKMVkzUjFjbVV4CkV6QVJCZ05WQkFNVENraHZiV1ZzWVdJZ1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUmoKUVZLQUg1L3B2aUdPU1ppTGRnOXNyQVVOZlI4Y0hCNkJMaWE1NDNicFZ4M095Zjc4L1VzKy9jZ0RsRjZrSFB1Uwp1WHM1TjJvOEExRVJ3UjJZUHdZbm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFkQmdOVkhRNEVGZ1FVdnRTN2szbWdXZCtmL1R3dTlMOU56ZlRZd2N3d0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBT0tVY0ZIVFFPQ2ZCb2RzNVNKbDRxaGhWYVRoSVcyRFRjY0EzNW9GV3RKL0FpQTJkTG9VUktTQQo0YlhFTU83bi9zSU91NGo2NlVWUFlVQXcyVTFvNlpINkhRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNvRENDQWtlZ0F3SUJBZ0lSQU9sNkgrcGduUkdYWGp0RGl5cXA5Qm93Q2dZSUtvWkl6ajBFQXdJd2NqRUwKTUFrR0ExVUVCaE1DVlZNeERUQUxCZ05WQkFnVEJFaHZiV1V4RERBS0JnTlZCQWNUQTB4aFlqRVFNQTRHQTFVRQpDaE1IU0c5dFpXeGhZakVmTUIwR0ExVUVDeE1XU0c5dFpXeGhZaUJKYm1aeVlYTjBjblZqZEhWeVpURVRNQkVHCkExVUVBeE1LU0c5dFpXeGhZaUJEUVRBZUZ3MHlOVEEzTWprd01ERXdNRGhhRncweU5URXdNamN3TURFd01EaGEKTUFBd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNYb2ZXZ01sNGZtN05pU1ZjYQpydXFPZks3YVFtNlY3Y2VhckxhMVBVbStFdVkzM094Uk5rZmxWdTJuelRoelAwMVptMzVHY2lVbm5xb1VWd1B1CnptNldlK042YWExTkJPUHpFS0xvcXZlbHNMOTFSenh6MTRDdlpoT0hRVy9lQkg3ZjJRMDdEWUpxUFNRRHlYUDIKTW1OL0xCL25KZGQ2ZW1vNDZiWHhHa2lNMDJzcG9IMXd0WERnU0tKUDdXZjNSTWpsNGNLNnlZUUZCdWJrMUNOaQpnNjZ3TGF4UnJEUmphQjZBWWNCL1gzVjVveFRZT2dTejR1SjBrb1YzTVhhMmFpL1l1T2xwcHF4cTd3RXBzbkRiCit4UHFmOUF2ZlFEZzFOODN4ak5KZXZQc1JyakJyV0E5WmtYb2ZUMWFPc2ptT1paOUd4RklWUXdiaE9vWHF0R2gKbXFWM0FnTUJBQUdqWlRCak1BNEdBMVVkRHdFQi93UUVBd0lGb0RBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZApJd1FZTUJhQUZMN1V1NU41b0ZuZm4vMDhMdlMvVGMzMDJNSE1NQ0lHQTFVZEVRRUIvd1FZTUJhQ0ZHZHBkR3hoCllpNW9iMjFsYkdGaUxteHZZMkZzTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUZlejl4SDhXaHVxYWdNVjdiNGkKRFRLQ0Y4QndnL1FaZWI5RkxaSHdNQWhEQWlCRlZaRE1Md0hWckVPNEZMNWU1VEhKeXM5MFk0TDhRcnVaZ1lkZwpwUk9rOFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbDZIMW9ESmVINXV6WWtsWEdxN3Fqbnl1MmtKdWxlM0htcXkydFQxSnZoTG1OOXpzClVUWkg1VmJ0cDgwNGN6OU5XWnQrUm5JbEo1NnFGRmNEN3M1dWxudmplbW10VFFUajh4Q2k2S3IzcGJDL2RVYzgKYzllQXIyWVRoMEZ2M2dSKzM5a05PdzJDYWowa0E4bHo5akpqZnl3ZjV5WFhlbnBxT09tMThScElqTk5yS2FCOQpjTFZ3NEVpaVQrMW45MFRJNWVIQ3VzbUVCUWJtNU5RallvT3VzQzJzVWF3MFkyZ2VnR0hBZjE5MWVhTVUyRG9FCnMrTGlkSktGZHpGMnRtb3YyTGpwYWFhc2F1OEJLYkp3Mi9zVDZuL1FMMzBBNE5UZk44WXpTWHJ6N0VhNHdhMWcKUFdaRjZIMDlXanJJNWptV2ZSc1JTRlVNRzRUcUY2clJvWnFsZHdJREFRQUJBb0lCQUVVcVpXWXJVMi9MaittMwpWbm9mYTNLUFFScmh6cHVwR0xGZk13QTg4cFEyL3JoZ2w1TDcxWk94TVRxbmk2WldLNnhDRnpsKys1KzA2aFBaCkZUd3JBWnEyN0M1OFljYU9Bb1J2QkVCcExBbHlOQU1FK1hoRnhyYzdNcEV4c2h0dHBZbnA4ZlVMMW44cllIQXgKeGlsNUZwVjl4UmVrMVVOUzczMENiakdLTWFtNldwc0VUTUN1ejJZNHlMck9QUzFZeFZWNnVLR0FiTWR4TldBMQp5clQ0S2FrQkJkMThvZFNDRFNSTmJ3SEYybk9iUVZvcU9uT2lSK1d2K2xUWWlPeHpTc0tCMkZycUhUNzZFcXVTCkR5cU9zU3J4ZEVCeVUyajluVE5QOEhkdyt0NitNaUxpR243VldiTXM1dXJ5MkhGTzFSeDFaU3JiRm1JSERNcEEKeis3U3BqRUNnWUVBeEVjY1BNakZpb1pjdVhmS0plWTNKblE5aGdyTG9BNEpqc05pVGJCbERrdlh3U2xoL0pQbApKanIrcU1IQTEyVDdvNXlZTUkzU2d4ajg5R29WcHJDTC9Za1o2b0YrY1J6cENHRmR1N0ZkOHNpWXJsTHlCN1dhCmptMGpFd0FZRllHR256QjBsV2JEY2FuTWxObTFBVGkzVFdRa3d2QTcrZXlQMDZJa3BvMi8wZHNDZ1lFQXhjVkIKY1A5a2FsTVJyeGhPRTRCWW5Jek9Cc1RwZ2JsenB0NkpNRGs2Z1JMTjY5cndkZFhpU1J1NmxaUzJaNzJpSkUxMwpFdkFvajJIMDVYYkxCcENISEkrcjYxdTEwaG1yM21TQjVtYmVVVjJldWJaQ04rQ1lqRGNHZi90R0hBOWloc3VTCmRWMmlRbUtpaHdsc0U4b20yMmRxM0JZbjlnaXUxNWRXS01CYTA1VUNnWUFSUmxEdDZKMjZPMmtkeWJVNDhMSVoKNkZFaDR3Rlk3T05hZFVmSm5xVEdSVmFQNFp5R0psNGNwMFNTaGJyN09pQUxubFNtc1ZTOXhRMCtWYmZpRzllMgpVTUsvS1BaLzdoTjBjVjFXajUyOUtIcUhuVFZBQ0hPNTVWRVk4d0VybzJLOXovM3l5RUNiV0Y1eEcxZ2E2MnIyCm5NRy9oblZBNGRrbXZ6YUtraDgzMFFLQmdEMmlJNnJiYktmV0M0VE54a2M5a0YvNVladXFjanNEV0krQWVyQ1UKcFM3a2RWZ3pld3krQXk5VmZPaHcyQWVzaVlOV3dPMGQrd1gwT1NYcHg0dmNMcjh2NXh3S0VMZlJXRWFPZkEwWgpzZDhabGdXNlR4aXEzZCtVcG1uc0hRVlJwaHJzQmxDZFJadjZzVHYwSzhKZkZZejZ4Y3FnL1FNbjRaVStqSk5XCm52ZWhBb0dBSzl2OVgxVTNYS3h0ZzZnTy8xdzJkQVY0dmh3SWxGTVNpZUNydXpyL0dQbFNyUGxLNnRHdUpTUGEKOXJZeE5GL1N2OWFLOUk5WHcvQzZVZkFoNUFUdnpVVGl0ZXhKbURaclVpczJuU0dtTUtoWW4vZmFwT29MZXk3NwpobDREZzU5d25URHlieVBLUDk0bnB3dXNOSkdHRzh6RjZvQUdsTDQ2RHNXUzlmNXliSjg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    kind: Secret
    metadata:
      annotations:
        cert-manager.io/alt-names: gitlab.homelab.local
        cert-manager.io/certificate-name: gitlab-tls-cert
        cert-manager.io/common-name: ""
        cert-manager.io/ip-sans: ""
        cert-manager.io/issuer-group: cert-manager.io
        cert-manager.io/issuer-kind: ClusterIssuer
        cert-manager.io/issuer-name: homelab-ca-issuer
        cert-manager.io/uri-sans: ""
      creationTimestamp: "2025-07-29T00:10:08Z"
      labels:
        controller.cert-manager.io/fao: "true"
      name: gitlab-tls-cert
      namespace: gitlab
      resourceVersion: "4452"
      uid: e36f22e5-6315-43d5-a56c-3f7415468cd9
    type: kubernetes.io/tls
  - apiVersion: v1
    data:
      ca.crt: |
        -----BEGIN CERTIFICATE-----
        MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
        dmVyLWNhQDE3NTM3NDE3OTQwHhcNMjUwNzI4MjIyOTU0WhcNMzUwNzI2MjIyOTU0
        WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE3NTM3NDE3OTQwWTATBgcqhkjO
        PQIBBggqhkjOPQMBBwNCAASReyR7DvPvrR4y88wrDNeAy5Zs4CfRRD+qgBkyGa0J
        IzvoOKZvz8+/bh356xwa1tqqBaSrmQvt5fuMvHZcQLPQo0IwQDAOBgNVHQ8BAf8E
        BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUrNWcwCmEcL5ksfQVxIE8
        NdaNIvkwCgYIKoZIzj0EAwIDRwAwRAIgC286fMwQojlX9gm5tsCNDuBlUYrs4KBu
        wR88SXVxn8ACIGHyBM8IYYTP6tn7gjjyKAUUX2WDwBnYno+NzZgUaEil
        -----END CERTIFICATE-----
    kind: ConfigMap
    metadata:
      annotations:
        kubernetes.io/description:
          Contains a CA bundle that can be used to verify the kube-apiserver when using internal
          endpoints such as the internal service IP or kubernetes.default.svc. No other usage is
          guaranteed across distributions of Kubernetes clusters.
      creationTimestamp: "2025-07-29T00:10:07Z"
      name: kube-root-ca.crt
      namespace: gitlab
      resourceVersion: "4403"
      uid: 0ced6f6d-d0aa-4af2-b702-1a5cf9f5d0cd
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: homelab-ca-issuer
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"homelab-ca-issuer","nginx.ingress.kubernetes.io/auth-response-headers":"X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token","nginx.ingress.kubernetes.io/auth-signin":"https://homelab.local/oauth2/start?rd=$scheme://$best_http_host$request_uri","nginx.ingress.kubernetes.io/auth-url":"http://oauth2-proxy.oauth2-proxy.svc.cluster.local:4180/oauth2/auth","nginx.ingress.kubernetes.io/force-ssl-redirect":"true","nginx.ingress.kubernetes.io/proxy-body-size":"0","nginx.ingress.kubernetes.io/proxy-connect-timeout":"600","nginx.ingress.kubernetes.io/proxy-read-timeout":"600","nginx.ingress.kubernetes.io/ssl-redirect":"true"},"name":"gitlab-https-ingress","namespace":"gitlab"},"spec":{"ingressClassName":"nginx","rules":[{"host":"gitlab.homelab.local","http":{"paths":[{"backend":{"service":{"name":"gitlab","port":{"number":80}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["gitlab.homelab.local"],"secretName":"gitlab-tls-cert"}]}}
        nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token
        nginx.ingress.kubernetes.io/auth-signin: https://homelab.local/oauth2/start?rd=$scheme://$best_http_host$request_uri
        nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy.svc.cluster.local:4180/oauth2/auth
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      creationTimestamp: "2025-07-29T00:10:08Z"
      generation: 1
      name: gitlab-https-ingress
      namespace: gitlab
      resourceVersion: "38818"
      uid: f1455f16-618d-46f5-8935-294f2b34fee6
    spec:
      ingressClassName: nginx
      rules:
        - host: gitlab.homelab.local
          http:
            paths:
              - backend:
                  service:
                    name: gitlab
                    port:
                      number: 80
                path: /
                pathType: Prefix
      tls:
        - hosts:
            - gitlab.homelab.local
          secretName: gitlab-tls-cert
    status:
      loadBalancer:
        ingress:
          - ip: 192.168.16.100
  - apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"cert-manager.io/v1","kind":"Certificate","metadata":{"annotations":{},"name":"gitlab-tls-cert","namespace":"gitlab"},"spec":{"commonName":"gitlab.homelab.local","dnsNames":["gitlab.homelab.local"],"issuerRef":{"kind":"ClusterIssuer","name":"homelab-ca-issuer"},"secretName":"gitlab-tls-cert"}}
      creationTimestamp: "2025-07-29T00:10:08Z"
      generation: 11
      name: gitlab-tls-cert
      namespace: gitlab
      ownerReferences:
        - apiVersion: networking.k8s.io/v1
          blockOwnerDeletion: true
          controller: true
          kind: Ingress
          name: gitlab-https-ingress
          uid: f1455f16-618d-46f5-8935-294f2b34fee6
      resourceVersion: "43549"
      uid: a2bc2e4a-b10a-4c55-98c5-ca0a6c31a147
    spec:
      dnsNames:
        - gitlab.homelab.local
      issuerRef:
        group: cert-manager.io
        kind: ClusterIssuer
        name: homelab-ca-issuer
      secretName: gitlab-tls-cert
      usages:
        - digital signature
        - key encipherment
    status:
      conditions:
        - lastTransitionTime: "2025-07-29T15:53:22Z"
          message: Certificate is up to date and has not expired
          observedGeneration: 11
          reason: Ready
          status: "True"
          type: Ready
      notAfter: "2025-10-27T00:10:08Z"
      notBefore: "2025-07-29T00:10:08Z"
      renewalTime: "2025-09-27T00:10:08Z"
      revision: 1
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"annotations":{},"name":"gitlab-data","namespace":"gitlab"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"10Gi"}}}}
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
        volume.kubernetes.io/selected-node: homelab
        volume.kubernetes.io/storage-provisioner: rancher.io/local-path
      creationTimestamp: "2025-07-29T00:10:07Z"
      finalizers:
        - kubernetes.io/pvc-protection
      name: gitlab-data
      namespace: gitlab
      resourceVersion: "4481"
      uid: 9f0a69e8-f087-4267-8cb7-50f13b0cd67c
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: local-path
      volumeMode: Filesystem
      volumeName: pvc-9f0a69e8-f087-4267-8cb7-50f13b0cd67c
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 10Gi
      phase: Bound
kind: List
metadata:
  resourceVersion: ""
