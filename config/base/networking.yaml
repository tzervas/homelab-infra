# Network Configuration
# Centralized networking settings for all infrastructure components

networking:
  # Cluster Network Configuration
  cluster:
    # Pod and Service CIDRs (consistent across all tools)
    pod_cidr: "10.42.0.0/16"
    service_cidr: "10.43.0.0/16"

    # DNS Configuration
    dns:
      cluster_domain: "cluster.local"
      upstream_servers:
        - "8.8.8.8"
        - "8.8.4.4"
        - "1.1.1.1"
      search_domains:
        - "{{ .Values.global.domain.base }}"
        - "svc.cluster.local"
        - "cluster.local"

  # Load Balancer Configuration (MetalLB)
  loadbalancer:
    # IP Address Pools (environment-specific overrides expected)
    pools:
      default:
        # Base range - override in environment configs
        addresses:
          - "192.168.1.240-192.168.1.250"
        auto_assign: true
        avoid_buggy_ips: true

    # BGP Configuration (if needed)
    bgp:
      enabled: false
      asn: 64500
      router_id: "{{ .Values.networking.cluster.gateway }}"

  # Ingress Configuration
  ingress:
    # Default ingress class
    class: "nginx"

    # SSL/TLS Settings
    tls:
      min_version: "1.2"
      ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
      protocols: "TLSv1.2 TLSv1.3"

    # Rate limiting
    rate_limit:
      enabled: true
      requests_per_minute: 100
      burst: 200

    # Security headers
    headers:
      force_ssl_redirect: true
      hsts_max_age: "31536000"
      hsts_include_subdmains: true
      frame_deny: true
      content_type_nosniff: true
      xss_protection: "1; mode=block"

  # Network Policies
  policies:
    # Default network policy settings
    default_deny_all: false

    # Common policy templates
    templates:
      deny_all:
        enabled: true
        exceptions: []

      allow_dns:
        enabled: true
        ports: [53]
        protocols: ["UDP", "TCP"]

      allow_ingress:
        enabled: true
        from_namespaces: ["ingress-nginx"]
        ports: [80, 443]

  # Service Mesh (Future)
  service_mesh:
    enabled: false
    provider: "istio" # or "linkerd"
    mtls:
      mode: "STRICT"

# Port Assignments
# Centralized port management to avoid conflicts
ports:
  # System Services
  system:
    kubernetes_api: 6443
    etcd_client: 2379
    etcd_peer: 2380
    kubelet: 10250
    kube_proxy: 10256

  # Core Infrastructure
  infrastructure:
    cert_manager_webhook: 10250
    cert_manager_metrics: 9402
    ingress_nginx_controller: 80
    ingress_nginx_ssl: 443
    ingress_nginx_metrics: 10254
    metallb_webhook: 9443
    longhorn_manager: 9500
    longhorn_ui: 8000

  # Applications
  applications:
    gitlab_http: 80
    gitlab_https: 443
    gitlab_ssh: 22
    gitlab_registry: 5050
    keycloak: 8080
    keycloak_admin: 9990

  # Monitoring
  monitoring:
    prometheus: 9090
    grafana: 3000
    alertmanager: 9093
    loki: 3100
    promtail: 3101

  # AI/ML Services
  ai_ml:
    jupyter: 8888
    ollama: 11434
    ollama_webui: 8080

# Firewall Rules Template
firewall:
  # Default policies
  default_input: "DROP"
  default_forward: "DROP"
  default_output: "ACCEPT"

  # Allow rules template
  allow_rules:
    - name: "ssh"
      port: 22
      protocol: "tcp"
      source: "{{ .Values.networking.management.cidr }}"

    - name: "kubernetes-api"
      port: 6443
      protocol: "tcp"
      source: "{{ .Values.networking.cluster.cidr }}"

    - name: "http"
      port: 80
      protocol: "tcp"
      source: "0.0.0.0/0"

    - name: "https"
      port: 443
      protocol: "tcp"
      source: "0.0.0.0/0"
