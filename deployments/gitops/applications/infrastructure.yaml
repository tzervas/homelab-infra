# Core Infrastructure Applications for GitOps Deployment
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metallb
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: homelab
  source:
    repoURL: https://metallb.github.io/metallb
    chart: metallb
    targetRevision: 0.13.12
    helm:
      releaseName: metallb
      valueFiles:
        - values.yaml
      values: |
        speaker:
          frr:
            enabled: false
        controller:
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 256Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: metallb-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: homelab
  source:
    repoURL: https://charts.jetstack.io
    chart: cert-manager
    targetRevision: v1.13.3
    helm:
      releaseName: cert-manager
      values: |
        installCRDs: true
        global:
          rbac:
            create: true
        prometheus:
          enabled: true
          servicemonitor:
            enabled: true
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 128Mi
        webhook:
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 128Mi
        cainjector:
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 128Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: homelab
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 4.8.3
    helm:
      releaseName: ingress-nginx
      values: |
        controller:
          service:
            type: LoadBalancer
            annotations:
              metallb.universe.tf/loadBalancerIPs: "192.168.25.200"
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
            limits:
              cpu: 500m
              memory: 256Mi
          config:
            ssl-protocols: "TLSv1.2 TLSv1.3"
            ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: homelab
  source:
    repoURL: https://charts.longhorn.io
    chart: longhorn
    targetRevision: 1.5.3
    helm:
      releaseName: longhorn
      values: |
        persistence:
          defaultClass: true
          defaultClassReplicaCount: 2
          reclaimPolicy: Retain
        csi:
          kubeletRootDir: /var/lib/kubelet
        defaultSettings:
          defaultReplicaCount: 2
          replicaSoftAntiAffinity: true
          storageOverProvisioningPercentage: 100
          storageMinimalAvailablePercentage: 25
          upgradeChecker: false
          defaultLonghornStaticStorageClass: longhorn
          backupstorePollInterval: 300
          taintToleration: "node-role.kubernetes.io/master:NoSchedule"
        longhornManager:
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
        longhornDriver:
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
        ingress:
          enabled: true
          ingressClassName: nginx
          host: longhorn.homelab.local
          tls: true
          tlsSecret: longhorn-tls
  destination:
    server: https://kubernetes.default.svc
    namespace: longhorn-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
