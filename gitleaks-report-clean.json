[
 {
  "Description": "",
  "StartLine": 7,
  "EndLine": 7,
  "StartColumn": 14,
  "EndColumn": 57,
  "Match": "key=76DDAE5F7C9F46122245F00075F79882388FF098",
  "Secret": "key",
  "File": "backups/branch-consolidation-20250730_141310/git-config.txt",
  "SymlinkFile": "",
  "Commit": "a568018537a45b01bafc70ae231a5e769e348313",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T18:29:58Z",
  "Message": "feat: Complete branch consolidation with unified homelab structure\n\n- Merge cleanup branches into main (safe operations)\n- Create consolidation branch from feature/homelab-portal-security-dashboard\n- Integrate main branch updates into consolidated structure\n- Add comprehensive backup and documentation files\n- Remove embedded repository duplication\n- Preserve all branch history and functionality\n\nBranch consolidation phase completed successfully.",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "a568018537a45b01bafc70ae231a5e769e348313:backups/branch-consolidation-20250730_141310/git-config.txt:generic-api-key:7"
 },
 {
  "Description": "",
  "StartLine": 220,
  "EndLine": 221,
  "StartColumn": 19,
  "EndColumn": 35,
  "Match": "token\n      dockerdWithinRunnerContainer",
  "Secret": "token",
  "File": "deploy-homelab-with-sso.sh",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 2.321928,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:deploy-homelab-with-sso.sh:generic-api-key:220"
 },
 {
  "Description": "",
  "StartLine": 695,
  "EndLine": 695,
  "StartColumn": 12,
  "EndColumn": 2252,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBemVUaUpSRkgwYmlkTTYwUWJGTkFQaU5lSTcxd3kwWS9lakV3QTJlcHBsSk84RFVrCkluV1gzVVhJWlBCV1RBT29mbCt4RnJCK2d6TEZPZGQzVjV5VGhVYVlnK1V3YTBMOVpmVkVDOVdGc3BFTmRNWGkKYjVTbjdJazdhOUgrQ2pZZ1oyQngzQXN1Yy9ZY3lsVFhjaFJrOVJhTHBxaFBSUFZwVi9xWElSNzRjNkUrMW1tRQpncGgxZlFobkEwWjFweFhlK1RnWFpTTmp4UU9SenpxMzFSUGxhS25LL3VtbmVNVUk1dWozSmRFOVFPTHRrVVo5CjY1SlMvS3hkQis5ZFNPQVFPdk5vcnF6cWQzYkh2TkhYOEVueTZLY1lpMURjd3dPbm91akFZTVFoTGNhSDgyZG0KcW9TbHdOblNxTmlkbll0RGgvd3B1TDdNT25VMmxJb05yZmxvZndJREFRQUJBb0lCQUVvNlNSbEorSlZ3TkNScwpNUzZNZU8ydC9JTndDWmtQTTFWUEpGc2w1VENVSGVkVmtUaG5JcC9nUjVXMFc3ZzkzV0hxQjhNQlVDcm1nOW9OCmh2WHIrZmNqYzFxaHB1b1VsWnhMWndQSkw5RW5vQzFJSmhGS0M1d29BV2NtcHFweHh3N2Q0MDZNTFd3YS8xZ20KYkNHeG5wQUpWOEYyamxWekVFNXFoaytuaGJUUmVFdEIzVjdpdUNqYUpRN0JjTE9sVVpzMGJRNGM4THdPSWlHWAo0ZHczSFh0aStJRWx0b29YeW95NmxoOVdLbmZGWnZIOEttOTdoN3QzTy9odEFMMFFINUtOVERKaFJYVWN1OXR2CnhjaTdOdEpJRHJwdk1FcXNGM2lwczBNT1pFZ1Vuekk5L2FIT2xBUWdzd1FnakRnTXZCNElpbUpTU0hWaHFhZ28KMU5IUTJ2a0NnWUVBOEVEdGFLRUllYkwxeUo4ekJvclBVaFh3d2ZGN2NVeWgwbHBVN083WkhZUTEwUFBlZlRFZwpIeFNHcy9FY2JQSTJGek9wQmlEUFBBd01EKzhnYTNrVWxSYVBxeFZhMUtHNDJWOVIxaDQ1WDhFR0UwS2JCclF5CmJEQ0Z6eUczRVB2TmJtb0NreXV3TWM2c3FwZEVoYlRmVVNOcTdXdU9SSW0rRUZNZXpHSjZJelVDZ1lFQTIyTjEKSldBVkhRdjZwd3laWEh2cW5MT0ovUC9VUy9VQ0ZVWDF3aS9YNGJUNENSL1A0OUpSaldIY09UMEwwa1RuUUpQZApkSXVhMklwMmRsYTk2OEVTVFkwOTdkR0VYSnI3TnUwQTY1ZW5KNDZwTUs4WGVVK3V3NnI1NWJMaHI5VjVwTmcwCndKbnRGVHFrOVU3cnBkUzBBWjVkZ1NOZXJjL0tBSVRaNFpwOC8yTUNnWUVBaEQyb3I2T2JqNmtTb2xnR2RQNW8KdVN6OGRUUWZGekR3RFdITlJ4RDlEc01jQUNTTGZXdFIyK21uYjFveXBFRDV4dkdYZ3BrQ21IR2xIZ3dvVXgrMQpWWTZ5aTUvWWZCdDhMS0hMNE1pSUdnMmI4M1FBOHNLeTBsd3UrdUQ2NiswOW1SM2V4dlVRS1lveC9qLys1bjIxClFlcjF5ek1kZnRvMmRMUGJ5dklWZWxVQ2dZQnpYUU5XMmdXQU5ySmhjVkNidjFXSmZTZU1jSUtVUm93SDM3ZngKbXZMc2J4c1d3VEd5WFFBaFZscFZodkpXYVlFcEJoZ25sdG1nRUg5bWp3cGpsQzBwdHFIZ0VwS0ZsOEdPQ21hMwpmQkdielhyT2JPUHRHS2VQb0xLenhMTEVvWDdMM2gwdlFrSFhMZlZjUVZuTTQrS2NEMGlnQlpkZDBxd29SYlBFCjNGWHFmUUtCZ0N5VzZTQTMrT0ZvSTJmclFrN2M3V1FjQTB4ek85ajA3V3VoL3RVTlQwdjZpUWRZSVJsemJQQnQKVmo5L2pGMlZJK0RPaTY5RVVyYjJLRi85aUQxVVRKbS9ITlVZc3o2WnFsWjNWOU9oTXlIMTVUQ3JDNmxqU0lCdgozYTVCZHc5UE5FVE01dEFNQXFXUHdSdmNyUmFBemlyczc4MUtNcFZRa2tkTDlqdStOVWV6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
  "Secret": "key",
  "File": "backups/20250729_141225/ai-tools/ai-tools-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/ai-tools/ai-tools-resources.yaml:generic-api-key:695"
 },
 {
  "Description": "",
  "StartLine": 15,
  "EndLine": 15,
  "StartColumn": 11,
  "EndColumn": 62,
  "Match": "secret: SEQzeUMxN1JmR3VYVGg4dXRHWXNLRGZLYUJ2bDhqUXM=",
  "Secret": "secret",
  "File": "kubernetes/keycloak/oauth2-proxy-multi-client.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:kubernetes/keycloak/oauth2-proxy-multi-client.yaml:generic-api-key:15"
 },
 {
  "Description": "",
  "StartLine": 377,
  "EndLine": 377,
  "StartColumn": 12,
  "EndColumn": 2252,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb1BIMS94STk0Q093dEhnbUhzVjE1VUxMeWxkeEI5djlnTXdNRVFBakltMHdoR1hvCmFlOWhxMURZSzlBV1o2TXpYWWFtNUhYUmNEaXhWYkt3QTlhaENxWGtJWVFFMzN3MFd6RFZRcnRrelNCUVlvQ2oKZXFUN2dYek9qRnFKQ3lTVUtqcVB3andYVDRXREJOZ3lHbVF6ZVNkeEVhQ1RaOStCNExpQWM4V0xVWGVpVzRXNgozZkkvTkFhRG81TXNuR2M1QnAzYVNKWDlJb2VDWE9oOHpYR1A1enlTbWc5M1B1b2NUT1F3NWV2cXMyYThlWGVaCm8wM1RFbmZPUDNDZFNiYk1KcWp4Y1RSa2Q1dk9CZkMzSmZYSHlUMkx6Lzk3aEhLbVlNQkhuTlNBS2ZzOVo3UzYKUnhNQ1d6bG41UWVIb2ZabXNNdENBYXkwdmxtVVIyWG1JSEo4UHdJREFRQUJBb0lCQUd1eVBWZ1hqc3dEVmVVTgpXUVRTUVJmT1lLdmZZMFZORWc4emV3ZU5QZlYxZHpmQk1ZcGhvc3VPWjNpNTM2UXQ4dHNzbFZUZStlek1JdTRqCmllQ25xRStGdm1nbS9WUEd1d29pWFRJd1R6MXIyQjV4MGZMcG4xcUFkMzQzdnVoejY2bHVVbkE0NGFoV3dOdG4KQisvZENReVROZmdEcVYraWtqZ2JmZWo2VVVXTFpvUTF3TXNXeW9uUTJRbVFQZGQ0MFVaQ1hlalJ4Z3pEKytXWgpxRkVQMFE1WVRiYWowVjlzMmxVNzZHOUh5MHc0aTFtWHQ3U1p4aDhmTGRFQzR5WGJ5SmRWVGxkdTU0TlZUVW9LCjBNUkZwL0J1NVhsRE03VFgrWlF6dnJNd1pWdDBFeW0wbVF2dzNxRmhBMm5sSGZlODF5UktoZkJQN2ZLZzJmWGkKenZDQm1PRUNnWUVBMHBwRTRBd3IzSktZQlEzeVBmU0tEVUZtcytsVFAvZHAzUkdUTlUwREl4RFlGTHB2akp4bwp1QWpqYWJoTm5iZFltc2UxUHpMZDFlckJXdmsxYkFaNGg2QjhjL25rTkxHOEZQYW1wcjk1TDM1dVc1Rk0rdVV1CnJWL1hEaGx0UzJqbzB6ZmZQRm8rOGIvT3h4a0xVRnF6cFh3TjZCckV4LzVwd2lscS9ONmxpaGtDZ1lFQXc2TnUKL1NtazZqakJsOGJtMjZDQk9hVlNOamhRZkxUL293VWlJWk9sMWFIYnVxd0dBT3BSVTZETG5JNmdIbUNqRzhNNwpCLy9iZ3lzZFBuMTJSM25kbUY1QjJJUVJITGZCQTRRRU1nMmwrMTNidEdmNSs4SlozMmtqZldZSXEyaTl6VDFkCjVrQXRiRHRiR0hrV3dSWVhtVEJYRUhMekdLc1JsK21UNkpoMk5CY0NnWUVBdXQ3NFRuVitWZklkd2g1bDNHT28KTzZyVW5yOWloMWZhTDdid2tGTU5mWWZzdERmWjAwTFdDTGFhVTZ5ZDhseEYydEZxR2ZIZ3RYZmdxZ0NIVHB0UApSOGszcFJFUFZWS0FPWG5DMWlNQVBReEtrQ1dWME9xYlNHdktQMUNBa25FOFptOGxQa0ExcWYwd1ZhbjdTQW16CmJodHRtNDVsSGJDNTF2YzVYN2VQMjhFQ2dZQm00aTcvSWdSaFRLRzZrTlpkVDhaRnE0UlZrVDM2cHpEODZUa3UKMFRmWDVqdm9xb2lwdUpBMlc0eFljOFVPMUtGU2UxUXkrOEhUOUR0MzNvRHlTOHRXVXROcjZ1QVk2eVd0RktNawpNM3REZXZPTXAxV1dxWG1iL08yMkI0K3RuUEtiMlpiay9JRW10dnhNSFhueTV3eFgra3ovRUlSNVI1V0QvMGxTCmU4TkYxd0tCZ0Rkb0p2cmFTazdySkhmajQxaVBvbWNmbm9ycXFOTkVYWStDS0FuT2dIcGpUVmpxZTloZlZoNmoKMFUwNlNnTXhnaW0xMDFyYjVia3d4RU0yQVRDSlllL2pFR0pqbFF3MU5KWjJGSy9GTXJvY1E3eDEyd1Evd1Q0MQp6cHlmalVUalNDZTBJd21XdTNyUlM2amFtVWFZaHNqZ0NRZjg2U1UycmhJMXRDRWZyYjQ5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
  "Secret": "key",
  "File": "backups/20250729_141225/jupyter/jupyter-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/jupyter/jupyter-resources.yaml:generic-api-key:377"
 },
 {
  "Description": "",
  "StartLine": 308,
  "EndLine": 308,
  "StartColumn": 12,
  "EndColumn": 2252,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMzNVY0pqeUNzV2M5V3FRek9tVElHejZLOWRvTEZnMXEycXV4djlybFluMHR4ZTFpCm5xRStrdnRDeW01NUtKOHVacjhoSmM3ODYrb2hXbHRlWEtGdGxvNUN5ak54c09IL0hvSW9FaEdhbkVsQUxCclkKZlcyd2dWamJIMnN4OFlJTklhMnV1cUZHYU1LUE9qb1p2NW5TYjY3bHR4Um0rQlhFci8vaXlkUGk5NXJKTlBYRgo5VklOa3hiWkZTZFQ3MUlUQXM5VFJQWmI4YmVUamdJYlhpWVVNSnBGUXdVd3hydDljWDVtRGVnVndGbUFyUVVSCkdLU1huNFFheFVCdXh3VEFqODRLT3pGM0ZMOVBaTXRYalJwN0RlM2VOUWduSFU3YmRJdkNrdEEvd3VyRzJ5d2MKYWN3a0pOL0VjK1dpR3JvaHhDOHFpaFdodVcyWC95V2pEOUd0cVFJREFRQUJBb0lCQUFQQUozVE0xelM3RXVDTwptUDJGNjRYcGl0T05rVm9SWjVXOEJBUEFYTkZHWUpwTjNiWGo1dlQ0bXFwaktFMXlQb2tpOUI5NlZleHZ4WmVLCnFRN005dFhzRlZybmVpVUo1Z3BSRFBNZ3NJT25CeGkyYXFQUVQ0SWNSN0ZEVDFkS1k0WUpNRUdacTJEZXd5Q3IKRVB1U1RXSHFnWmlORXgxZTRDcEVGVDVsL0ExRDE4d24xQlZ6Snh6bUFlbW1yR2ZpaVdPeVRYYlhmL1V4cGNzWQpkc2ttb0huYWZlcCtKcXg5MGQzWFh1UDZ0MUl0bGwzSmRqR1p6M3JXYnBCN1IrOEkydW04RzFiOUFRK2tSWkZQCkVmVC9TdmNReHlkMmtNK0E2VmRLY3c3VVFTVEpOVkNCWW5oVHhiRHZwUEMzVktHc0NYcHhYSHdIZG1SV0lpVE8KSHo2QWc4RUNnWUVBOTBxWFpxcGkzcVg5cWJWMlNCV0RCdEVNVHRhOTRaNW5Sa1RtS2hqYzFXNWxiTm50YlVnYQphNTFmN0k3UXRIV09icDE0bnFrQXFISWpiYm9Qd2pCemlPQlplekt6dHZEMEZ2US9uNmFoZkEwT3hvekZYZGR4CmRTcXNaYXN1YUYyQVB4c0tQNnF0QUovRHdjQW5PaFRqV01keSs3VXBQSEUxYzZPdmlnVFVITlVDZ1lFQTUxT2wKL3h5UkI5RHBEZkRHNk0vUW5PVi91TUsxZjcvYlBqZlQweHNSQXhHUzY3ci9TZHlKUDRXaWZrMWhGYTR3YWJZNApxM0NSL3RvVThpOFE3VGFBQWdWVHVoREtFdGNtS3duL1VtcGU4SDJzVG9aWkVIaXFBTVc3Y1JaV2NhOVhiRnIzClIyY1lKeFFvbTBtT25jZytVRkttRnp4RVJMOUEzN2VQT0l4eFo0VUNnWUJKLzVVY2tLSHpWQ0o2MVNVbTN1RU4KZWlLL3VMeXJOZlpiYmFTZU5rQm0wWmtpSUhoT3VrUEZyaHNWTTRzNlpPOFJKS2dDZWpvTExkUnlNam9pOXRLcgp3ODZpOGdJYkhURTlhU3RjdjhVVTFPZDEvSXZXei9CUWlrdDZST1luTHN1QWxydlRYMlJUaW50T2tBeHM4ZkV5CkVNVFVrMXBhanRuYTE4RmdnSjlrWFFLQmdFVGdFZ2VnUU1wYitGZ1BQWm9wN2dvWkJ1dERCZmxRYlgzYjczVG0KbFMwZHVXbjRsblF1ZHFyMEpncUhEWVlBQkNnbGVrQUpWMTdUSGZOeDhnOCs3K1FxSStDOWlQME5GQzh5WGRQegpHZXR1NzdPOXFwME40RWcwbDNlM1YrdW5jbGN2eW5wM0JxajBCcGNkMHBuRitrKytHL2ZGR09xREsxU3crYkt6CmxqeGxBb0dBQjlDaHJvVWFVem41NEtxRTNXTTlyNkhIUmw5WGh3aTVJOXJhOHlUTStKOFQrVGVyY3c5SzFuemEKVDVlWmN4Y0o5MWx3bXU3RU9lYmR2U1lhR214SzQxQ3pGbmlSKzJqUjhKMitBbi80K2czNCsxUkE4NEpweVQ5RApPVytub2t0VGllZ0JTMDY1Vk9VdWNXb1ovMVFDTG5jaldWakcwVERneUZncVJOQ1B5dTA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
  "Secret": "key",
  "File": "backups/20250729_141225/homelab-portal/homelab-portal-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/homelab-portal/homelab-portal-resources.yaml:generic-api-key:308"
 },
 {
  "Description": "",
  "StartLine": 864,
  "EndLine": 864,
  "StartColumn": 12,
  "EndColumn": 2256,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd0pqL2dWMVVrcVFyd3p5WDhpRkd2L2pEZE8xeWFhOVdRUDlnQ2hDa3p0YjNyRGErClVlK08rUnM5Qk5QTWNVNzFqRFFhM2EzWlVyRlI5blAyY3gvYVJCa2JDMWkzSkZUQVVWZjlOSSsvWWhWVUEzNVQKbm53T0VoSTJIcHRNK2RYQ0cxdlZNT2tiUS9DYWtRYVB4RlJTMjNNc01hMisvRDhZYXRwVVAxam9zSEpTbE5ENAp5TzE2UlI2aU5GWUppaFhHNzdJYXY0bHZxZkxZbFd0S0xyUFFwTWZFTVNIU1NQQUlzck9Oa212aWxoanJlZTlmCjZ0RC9FUTVjVjV4bGNqZjFuTlZNS25GZldQVmNpQWlZMGphblZndUJqRE5yaUsvb2hpREh1Q0EvTms5UjZ5TEQKZURlT0I4L3NGTEdEdUFFNXZLUzUxaDhSWGsyQkNBUGlTQ0pQSVFJREFRQUJBb0lCQUc1QUp5TmExZXNMNTdGZgpvbXVNK1A4ejNFKzNEV1BLWjBuVjVwaGNacnV3K3g2dVI4eUhvZ1NmdnhKZ1hBd1E4eWRMUElYaDJ5SW5ONUFwCldjOFZVTkRpdmtTRWlISlh3YS9PK3JkNEFrcVhndnhzK0ZrbEVyanRpK1dCYVZNck5tNks1ME9VYlhNNjdJQlEKalVRS01WUkdYZW9pVjgzMklIZ3FlMGU0RVp2UEZmRTIxN1RMY2xMaFBOdHIreDFRdm1RL2M1a3dOQ0I4WDBMNgpXdnNqSTlFMFo3cDF5NGkvMVFlMklMeUR1MFowSG9pZXFPcDlsYnd3cEV3V2oxQVJqZmJxM21oU0xPSDBCeno0ClZVSmJQQXViOGJYc1RGUDh1RkZmYndOdktFT0hINlZZcVUzYnZQTk16d1UyNnFrNWFBdWpCZDFiYXBOYXE5WGkKOGNJMWRrRUNnWUVBK01oL001bzdUbkpmSG9US0ZQbU56S0hXbUZraDJmNEc0WUFRU0JXdFBQeE1nSzJsRkF4TgpDeXQwazIrc3gxdkc0V3NtMHV5R1hFTkRGdkFaeDkxL1JoNWhsKy9Idy94L0hEN3hJMkVkSW5oOWxYMm54TGlzCnlCUzhxbzFpSnlCaGpHQXJTcy9Zcys3TE5YNjdYbFZJOW5LNVNkV1JuK3ZLbGJUMjZvNlhWaFVDZ1lFQXhpOUMKTGJLUVlzNk1NNWoreTZQM1YrdFdUNHVHOXdjNFhadWl6dHJWU2dPSlFudnhobCszRVQwSlhkcU1TTktvZWRObwptU2kzM254cFRsTW42eFN6clRtcHJ6MWNXby9hSzRqVUZGWEdKTVIvWkdOSWFKcnhpL0dZOUZkaDVNQ3d6TnJOCmNqbm1oQzM0RDA3ZlB4RzhLRWx2U2gwMEcyVDk2b2R3S1FML3c5MENnWUVBalFOQUxtU2VkeEdXM3JxUHZLSFQKQVFrK2xLMzQ1Ukg2bm5pelFkaWZrRERGd0M0c29wZHlXQUZ5bTFzeVNQRzVZZTRWWEhyYWtaTkNoTTdsSGdkcgphN2d1d3lzVFJRQnFuLzBCTzNlQlJ4ZWF2MUF3OXUxaWFpcHU0aEV2Y0ZRSFZzVHY1UUM0cVF5U1BDa3dWUURzClVWeW5yN1VSVE44ZXZncUw1bG1hYUIwQ2dZRUFzWnYydGhkNkdHSzgrUnphODh0dFJvaXM0RHJONktLNjNBRTMKNWlQdDFCZlpNaEQ3d2c0VGRVcDdFM1ppRkgxZDZWZ1NQSGhtVitpdFF6bDQ0OCs0dXJ5Ym1tWG1WMjdsK2UvMQpDSWhhTytjeHQ5aldNcER4ZWhZNW1uaVpUYlYyZlJCMTRER05xZFc4b3BOdnRRa0MxQ1FEcmFzQVlMQ2dja2VRCnQrQnRNSzBDZ1lFQWlMUFZndEZOTzdSSlE4VkoxY1pzSDBCZXAveUF3dmNtTFRDNzJDQkIwYkVaaUlDMWs2WmIKOHQxeEdFZW8yR1ptdTdxUGJ4OEJUZWVGd2U2RDdiTUlTRzhIVTRBdlpuTmVzMnB6MkhERlRGVzV0eCt2U1hnQwpDZkswMmxwOTRhS2RMVUltaDh6aVZKZHYzcmUxU3BYL3JWTTFoWGtXME9DZmhOTUVOSXpTSjM0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
  "Secret": "key",
  "File": "backups/20250729_141225/keycloak/keycloak-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/keycloak/keycloak-resources.yaml:generic-api-key:864"
 },
 {
  "Description": "",
  "StartLine": 798,
  "EndLine": 798,
  "StartColumn": 12,
  "EndColumn": 2252,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbDZIMW9ESmVINXV6WWtsWEdxN3Fqbnl1MmtKdWxlM0htcXkydFQxSnZoTG1OOXpzClVUWkg1VmJ0cDgwNGN6OU5XWnQrUm5JbEo1NnFGRmNEN3M1dWxudmplbW10VFFUajh4Q2k2S3IzcGJDL2RVYzgKYzllQXIyWVRoMEZ2M2dSKzM5a05PdzJDYWowa0E4bHo5akpqZnl3ZjV5WFhlbnBxT09tMThScElqTk5yS2FCOQpjTFZ3NEVpaVQrMW45MFRJNWVIQ3VzbUVCUWJtNU5RallvT3VzQzJzVWF3MFkyZ2VnR0hBZjE5MWVhTVUyRG9FCnMrTGlkSktGZHpGMnRtb3YyTGpwYWFhc2F1OEJLYkp3Mi9zVDZuL1FMMzBBNE5UZk44WXpTWHJ6N0VhNHdhMWcKUFdaRjZIMDlXanJJNWptV2ZSc1JTRlVNRzRUcUY2clJvWnFsZHdJREFRQUJBb0lCQUVVcVpXWXJVMi9MaittMwpWbm9mYTNLUFFScmh6cHVwR0xGZk13QTg4cFEyL3JoZ2w1TDcxWk94TVRxbmk2WldLNnhDRnpsKys1KzA2aFBaCkZUd3JBWnEyN0M1OFljYU9Bb1J2QkVCcExBbHlOQU1FK1hoRnhyYzdNcEV4c2h0dHBZbnA4ZlVMMW44cllIQXgKeGlsNUZwVjl4UmVrMVVOUzczMENiakdLTWFtNldwc0VUTUN1ejJZNHlMck9QUzFZeFZWNnVLR0FiTWR4TldBMQp5clQ0S2FrQkJkMThvZFNDRFNSTmJ3SEYybk9iUVZvcU9uT2lSK1d2K2xUWWlPeHpTc0tCMkZycUhUNzZFcXVTCkR5cU9zU3J4ZEVCeVUyajluVE5QOEhkdyt0NitNaUxpR243VldiTXM1dXJ5MkhGTzFSeDFaU3JiRm1JSERNcEEKeis3U3BqRUNnWUVBeEVjY1BNakZpb1pjdVhmS0plWTNKblE5aGdyTG9BNEpqc05pVGJCbERrdlh3U2xoL0pQbApKanIrcU1IQTEyVDdvNXlZTUkzU2d4ajg5R29WcHJDTC9Za1o2b0YrY1J6cENHRmR1N0ZkOHNpWXJsTHlCN1dhCmptMGpFd0FZRllHR256QjBsV2JEY2FuTWxObTFBVGkzVFdRa3d2QTcrZXlQMDZJa3BvMi8wZHNDZ1lFQXhjVkIKY1A5a2FsTVJyeGhPRTRCWW5Jek9Cc1RwZ2JsenB0NkpNRGs2Z1JMTjY5cndkZFhpU1J1NmxaUzJaNzJpSkUxMwpFdkFvajJIMDVYYkxCcENISEkrcjYxdTEwaG1yM21TQjVtYmVVVjJldWJaQ04rQ1lqRGNHZi90R0hBOWloc3VTCmRWMmlRbUtpaHdsc0U4b20yMmRxM0JZbjlnaXUxNWRXS01CYTA1VUNnWUFSUmxEdDZKMjZPMmtkeWJVNDhMSVoKNkZFaDR3Rlk3T05hZFVmSm5xVEdSVmFQNFp5R0psNGNwMFNTaGJyN09pQUxubFNtc1ZTOXhRMCtWYmZpRzllMgpVTUsvS1BaLzdoTjBjVjFXajUyOUtIcUhuVFZBQ0hPNTVWRVk4d0VybzJLOXovM3l5RUNiV0Y1eEcxZ2E2MnIyCm5NRy9oblZBNGRrbXZ6YUtraDgzMFFLQmdEMmlJNnJiYktmV0M0VE54a2M5a0YvNVladXFjanNEV0krQWVyQ1UKcFM3a2RWZ3pld3krQXk5VmZPaHcyQWVzaVlOV3dPMGQrd1gwT1NYcHg0dmNMcjh2NXh3S0VMZlJXRWFPZkEwWgpzZDhabGdXNlR4aXEzZCtVcG1uc0hRVlJwaHJzQmxDZFJadjZzVHYwSzhKZkZZejZ4Y3FnL1FNbjRaVStqSk5XCm52ZWhBb0dBSzl2OVgxVTNYS3h0ZzZnTy8xdzJkQVY0dmh3SWxGTVNpZUNydXpyL0dQbFNyUGxLNnRHdUpTUGEKOXJZeE5GL1N2OWFLOUk5WHcvQzZVZkFoNUFUdnpVVGl0ZXhKbURaclVpczJuU0dtTUtoWW4vZmFwT29MZXk3NwpobDREZzU5d25URHlieVBLUDk0bnB3dXNOSkdHRzh6RjZvQUdsTDQ2RHNXUzlmNXliSjg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
  "Secret": "key",
  "File": "backups/20250729_141225/gitlab/gitlab-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/gitlab/gitlab-resources.yaml:generic-api-key:798"
 },
 {
  "Description": "",
  "StartLine": 773,
  "EndLine": 773,
  "StartColumn": 12,
  "EndColumn": 2256,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdU1INnlSOXR1YzJtb0MyTWJjVWk0cmlxRXJxQ0pqc09TQzdlT2U0SkNqbTl5eGdhCi9kRVZXYXlZNE1PbjA0SFhHQk9NRDd5b0k1UHRmU2pzdUpZWWV5VkFyR0VEcUJNNkg0OHcvM29SVGVhRFNhbmgKc1ROVkFPNFNYd25ydTU2NElCRDVQd2NreEE2RVI5ZXFYa0ZOb0R6aHV2d3hPYUV2bGtxNkhJNTNvQW0yY0M4WApzYUlVeUJwK0hyL0daeWpPOFQxdGNXQWczSElWODdTb1VBaHdwTkNPeUQvdDlzMWxsMVh1Znl4VGt3eWFBenVTCitlZFliYWZOWU1Ec3NoOXp5KytNTmxvbXpoeUdBSTV0Y2pBYytKbFRKeklkWkttdFhlaTZYYVg0UUlyTG1MNkQKNHhyS1YrNG41UWN5VzRxQm9HbUdURndTSE9Wc2FUTHRPMFZxL3dJREFRQUJBb0lCQURUOWFieTZkMkdGZ3FkSgpPUkFZck9kQzJJQ1RucFZ4ZGFpdFRJNW4zNDdmdmJnY3UwMFY1UjQ1bXdWSUNIL29xdlRjVWwwSEdtQk40cHoxCm1tTmNwVHZZbE9KNzFxMGppcFdYbjVGK2hLMEhrcHNUanNnZ2RWNVZhYzU1VFhPYjA2cGF3K25ZVmlxbkVUaDcKdWdEYmtQU0cwYVVzQk1CSEl4dGpabHFmWDk3MXZXWEYwc2IzTFdLYitwVWZsWVpIT25YbkRQa2ZvZ3pYL3lSMQpocHRrWmlCbHVyTmFCak1Bc05BNC85Tnk5SzhqWUNNTk1RTW1vVHVWZDhpbnR2VFRISlc4ajlyMk9NeDZVM25VCjlTNFg2aUlPbXNBK2JTaFRjeFZGNkwwcDhTWU5abFA0dkFkdXhSL2Ftamc3QUdadUdseWJYZ0ozd2RTeDdLREMKSWZJazdCMENnWUVBM2xGZWdsNDE5N1lxd0FjOUFUNzJocVVqdi9mb2dSUnRZaXJIdnNvUjEyY3FvZVNGZkF6OApvZGZ0NmRuMmxxQlYydWVxTjdzMkNETEJOZVdQK2Z3M3FmTU5QaTRrNlZxUnRVY0xlby9rZzJ6VmI0V05sRnU4CmZkNTJFYmk5ZFdTZXF2dUl6dnVCZ0xaMXBKTVBFYmkzYWtIQUxxR1I4OHZ1VFRkZkZURDlmSnNDZ1lFQTFML1YKOWx4OG05NzgwazhGbVB2ZVBWdm1HaUVCdnBpTCtNOHpwcm92K0lGdGhvS2Y1bGI2VE11djJOYTRVRkwwcE1aMwo1TSsyTkZQWG5Lem5FVG1Db1dSeXl4N2M4TjltajRvUDE4bURZNlBnR1JBaEF6Z2pJa051OUQ3T2lNK1cxaWhoCllMVFFick9VNktOckFiVDZ1aDdneEFHVGxxVk5DeEc2djBGdloyMENnWUVBbzUxdTJMTk5OSWswM1M1Mmp6d3YKWXRpV2Z1bU1pN0xrN2FKZWJ1TjRUZmIzUVQ1Vm52NVB6eXlEUTkvTnd2MHRNblhjcURkM2hJRVdBUHg2QVpqRgp2cVhKMFVGVW1RaTJ3NXNOcjUzR3A1S3BZZklBU0hkYk9hZEhiYk53ZTcwWnFPeUZ1dzhPT0JRUWNKWnFPTGloCkErcHY3ZUdxOEtuZEw2YllxMWZxdHBFQ2dZRUFvdWdPSjJwa2hGcDRUM1h3L0ZjSXN3VldxZlZTUjZhNXI1akIKblU1K2d4UmdVSnBmWkZwL3FTUmpEM0JEakVZcFRLOG9pVTIvNEV1L0V4cVdpT3IzcXl1bWR3QzMvNzJnNUJLOAoxT2hhTW9iK2gxS0JaTnlza29UK1JncDl6ZWJmUWplRGNUQ2pWZEV2R2dCZ1pOczNEaU9zeW9uR2dKa3M2R2Y0CkRwRkZnL1VDZ1lBV0orVlQ1b2ZPUXdCL1l6THNJU3EySnl6L05Rb1RRM3grNy9aR2JWUUdWSDAvbU8rTHlSQXgKdUNQWllXdlhZRkZCNWU4RmFBMkdGcEo0TjhUeWY4ZjZzTWtyY2ZWdjZ5MmtlRS9QWXpnS2lkRWN1WjErdTJPQwpQTmYxcm5NdG44RzV4SHFNT0M3WUZ2aWJaYzZZb29CemVyVlZyVHVkUzVzVWxhbmVucW5RU0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
  "Secret": "key",
  "File": "backups/20250729_141225/monitoring/monitoring-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/monitoring/monitoring-resources.yaml:generic-api-key:773"
 },
 {
  "Description": "",
  "StartLine": 797,
  "EndLine": 797,
  "StartColumn": 12,
  "EndColumn": 2256,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGx2eUhVMU5oMVg5NGorVG0yTE9CUUpiRVpsMFhOaE5VSlkwWXExbGN3S0syaGRTCmNRaUxOK0NQQ1g3anZ3OE4yYUs4ZFplNU13d3NIWFV1anNBUmtuM29TUFJONDl4U3QwMjZRdFFTUERTSGF5Q3AKekV6U0NXOWg2WHh2dEZtV3l6NzdBbUpHNWM4LzdQNmo4ZWhsaFBrOHJTenVka0lYc0FGcHcvZTV3QXZmQ1BUZwpWaTN1U3RCNGxBeDlvNFJrbnd4OHFaWEsrNk9ad3N4a2x0UFR0N1U4YWFJYUhZZUJKOFhvSzBvVWo3UW9wTkx3ClkzVHVvQTZwNkJXaG9ybWlNOG9LaEQwYzFhRG5OaW00dkJ2NzB6eWtnVWIrNWdST0NISnJYUG1odlRBOGkzY1gKbUUvdFdPWCtEM1ZwaHhDUDcyMlMya3dvYVpRVXZCYXk3TThvU3dJREFRQUJBb0lCQURNMWN1RXpPbFpoMXFaSApOOVd4M2RsV1Uza2JWRHB0NVpSaW5Hb1JNQXNwYVVmaU9ZMk91T1ZuWXlxNm14S2R4WTlma0dWSUJDdXJJT29pCjVxeVZrVEdLT1F2WmZVU2xFL1hQbERKRWtoUFo3Y1ZrZERGcDJnKzE3NjM1UHZBMmh3RC9XZmVnbVFYRXlCa1gKZkMyZGwya2hpMlhVOUZBUmt0YWo0VzExVnVDckVhcHFIQmRvQlh0VDJOc3BYazBlVldZckxVeVl2Q0d6TXI1cApMbmhOMTZTektsUC94VW1TYWJjc3V1RDRqeDY0SDR1bXU4QzNlVGlVZUUva2lDRldXbkRobDZncDQzTERtcHJUCi9GbndmWElZYWY4emdIOUwzSldtNHM4YTZIRTVHOFZGbExEWmxOQ3hYSU9TdHhCd0JwemVxSkJkMTBwbmxSUWkKUDBTbVh4RUNnWUVBL3ZGWW5hZXIxMnhjdnN1NmdlclE2cksvMGhOSFlIbkpJNmhDSGxLYkJmNTJKRGZWdlNWaApUSUZOanIxMXo2RXZhb3Y4czJ5Q0hRM0Y2a0RRNWVzdm1ZZFRiaWkzaUhLK29XYk0vWm5aMy80L3dyQkRGR1ljCmxwMUl0RW0rWkRTRFFOcS9zOUJBNlFEN1ZzV09XeWFpVHJBYzRycGsyQVllMXlNeGhYTS91UmNDZ1lFQTB6dEUKdkp1aTExNXFLTVlCaVY1eWk1a0srMllxMkp2YjNjU1pKcklxUEF4U0F5Ly80ZmhnOGlsbVA1bDcwazlKOGY1cgpveCtHaWxOalp5dFFpdmlNNU1aVVEyOEtpMHN1MHFmeGhoNWNrQWRYeEJLM1dVVHlKZnY0eEZ5STRQcEtIMy9KCk85SFhxY1pQcVJwYXJLTWlEUTBKemlXRFlsc3lQWUZxSFFkNll1MENnWUVBcFJFZEFFN3MyM2xrLzRBblRURDkKZmNpb25Gc3hMczBMcDVPczQ3YzJlb1lNZGx6VWZqZ3lySGRZQVNDNG8rdklLS05reGNOdTUyTGdqMURTTU51NwpJUnZXc0ErYTdiVGxxdGxGeHJtVHNRME11WUNvbmcrVFdRMlRZbkFRM3c2RklUdkJQYXFNTEpFZkswcVVabjQ0ClB0eVdoMUtLTXJpYnhVNGJKVDIrdDVjQ2dZRUF2TldUVVhsaFRsL2RUNjRUMlpaUm1IS3MycW92UzQycU5NdDQKanB0Z0htWjFPdHhDU09VZTVkNFV4bTZUdnlPYTIzZXpDaFU0MVpoT21RQ2o5RmpXdS82QmZmZGEyY1BRakFvUApaUExubE9xN2oxR2NEM1lQYzkyYU94RHVYUkhrQ2R6WExWOGZDV3Q3ODVUWDB0WFRydzhrNE9Hd1h0RmdUSlBSCkpUcDJNdEVDZ1lCc1lXOG5MRk5RSUNyLzdtYjgraTBQU1NJSkZVVkZkMFNJOFQyUHQva2FabVlsS3dHZkZybVEKRDd1enNOY0cyYTJ3a25TV1ljenl5MVNDZzg5cWlHN0VpcHp4eUl1d2o0akhlUkZmWU9LVFNFWWpoR3dRTUE2bAo5WkVQQnJxTFpoQjY0RkV1SmtTTWw5Y25WYkJaWlJyV1djbnM3U0RsWDBZKy96NHlqZWRxMlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
  "Secret": "key",
  "File": "backups/20250729_141225/monitoring/monitoring-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/monitoring/monitoring-resources.yaml:generic-api-key:797"
 },
 {
  "Description": "",
  "StartLine": 1288,
  "EndLine": 1288,
  "StartColumn": 15,
  "EndColumn": 50,
  "Match": "secret: aG9tZWxhYi1wb3J0YWwtc2VjcmV0",
  "Secret": "secret",
  "File": "backups/20250729_141225/oauth2-proxy/oauth2-proxy-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/oauth2-proxy/oauth2-proxy-resources.yaml:generic-api-key:1288"
 },
 {
  "Description": "",
  "StartLine": 1289,
  "EndLine": 1289,
  "StartColumn": 15,
  "EndColumn": 66,
  "Match": "secret: SEQzeUMxN1JmR3VYVGg4dXRHWXNLRGZLYUJ2bDhqUXM=",
  "Secret": "secret",
  "File": "backups/20250729_141225/oauth2-proxy/oauth2-proxy-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/oauth2-proxy/oauth2-proxy-resources.yaml:generic-api-key:1289"
 },
 {
  "Description": "",
  "StartLine": 1305,
  "EndLine": 1305,
  "StartColumn": 12,
  "EndColumn": 2256,
  "Match": "key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBczl0Vmp3NzNRdXROSHNFdFRIQUFKZ3lxTnlHQ0dvVGxIb3FaSmpnYVljTXVmVVFQClBjaXp5d1VGNHFIU09yQWNVaWtWa0VncDdKak45VWxUYzBNNnhuZ3lZSVJsZkVkRkZ2NlY1V01BZ2xMc05wUVYKWnZpclcwWkJyUy9zdWlrUTE5NHFqdkZMc3pvQ255TjdwSVpRSUFIRnU4Q0VCV2h0Q2xYUXJIdlpSS244dmVCTApmaVdFbGNkVjZOV3dQSUxnYVVrZjR1SENrMklYc1VRaGRiVDFwdVZIemhEZitiZk1iR1MzOUVNY01VU1VtWXV1CjNmM0trckwvSExKRFUxZ3B3TjJkWmN2Mnp4VU9DWGQyMWRTYnZvVFBqak9YZVgzcTBacTd2U3YyRnh1djlZU3cKMzYzOGZzY0FFZzJpMUMvQUV2eGdzVUVyeGxNVzAwSjVjMDczZ1FJREFRQUJBb0lCQUhWRmttZ1JMaEFvTk1UVQoyS0I2ZHQ1WWE3USsyUUpKbk10cE82cTc4aGZFbUU5OVRTTFA5c3R0bndUQzFyMEZqN0hTc0FpL3hQWk1QQjZ2CmpRWWUwL2dNNzJ3WFo4UzlBOE9XaEU1cFd5K2V1ZjVzVi9nb05ETHpnR2RZVkZhZDZDbVk1czhGYm9LU1ZKdEgKRzV1UEtEZDJjR09YaDMydk5Vb0Q0bWhVNkxubnRNWnZQVkRsUHNlamRRWHA0YjRQV0xORmVIeVhYMDV0SnpPagowUk1CcG1WRldjSzVVbHVTNlRhUE55ZlExeEUyVTIrRnZWUzJBVzNtTW1UYTE0Y1UzTWRkMXdTeW5DN2Z0dm53CjlWSFlmL0xmeWc2Znp4Q0xQc2pOUitCdCtIdnFkVE1mc2wyY0FaeGxidVF2d0VBRUZwazg1Y2tkWmJieDlqRnYKTHhCNDNrRUNnWUVBM0EzTG9mR3VFS21nbUltUXYxZjlHaklPT2lJZlRscWY5YXdyR1g4RWxRK2FLUittL1JmVAo2R285NWpVQk5adFd2MVNTZmRBNlZXWmF2SjJ3cm1Kekc3bWR5Wks5aWkzQk1vdks4d0FjbFRZa2E1OGVHbzdMClZ2VDlsWnlYS2ZUUytOeW51SCtSaExnUXFHdFpaVkdZeFZINlFROUpRNDFoaWxrUys4R1lCWFVDZ1lFQTBUeVQKMWttUjFwODlXMjBING5GeHVYT2F4cThsdkEyTXU1NjFYUXBZdGd6MGJTa2luT2QzVHVaZ0p6cmlWMzBMK1p4VwpLZ1NReVZVNmVMc1RKUVZWUnBxMExkQy9BVEdjZXFVd2xNaTRSMExva1hsRTVyWnhsOWJpNE1xS3VqSzBpeDF2ClRpSGRRZUZkZlorU05iTVF4UExJZVVSeHlxQXQ3ZkNPVmJPVmpGMENnWUVBemkvQzhNL0NPR3lvUktVSlVyQ0EKUUc1TWRGNEtsV0ZHNW12V3lvSUFhaWIvWEs4Q3lienMycVhKc0ExVVA4VjRoN2dYdHZsSDMwTVRuQTNwUWN5UApiSmdFWjU0dUtPM3NTNDgrcjJnWVlCc21EdzA5cU1iSmNvWUZvWXppK3ZZaVEvcUUwTlAvSnF0Tk9IRzFoc0RvCjgySjNxVVJJY3Bwam5iME9rNFIzREEwQ2dZRUFqWldiU0ViU085UFhWaFZxWDIxNmtnNUxMcVQ0T005R2F2TVQKTUprK3ZEbjU4Q0FFdnYzVit2cmpGOGk5dm92c1hZVFB2WEVIZEdXS3dvVjhoL0dhNmNMbnA1VDRtdHN5VXIrVApKeXJIbjlrRHZPUzluZ3pZd3ZGeTVyL0hyZ1YvckI5SDRTd0RKNEJUbmgwcmQ5RHF5UXFzWTNyUU1WZkFuS0RKCi8rNGNoVFVDZ1lCREhKazl3S2t6WURHaEZUOFJaY3E4WGJscG8yZkd6eFRwNytSbU5XK0JoL29PeUNudHQyRHgKTjV6MU5zblcvK1dEUU01NTM3VkJqR1hWcy94ZEtWMEdQdVZyUTB6bm8xMC8xM2tNK3hIQjFzRFRPRkw4NHBPSApVWUlTMVJwa3cxczgyYTg0WnR3ODRiTlI4KzlyWDJnSThuUHVDSVZiOGZwcHovZDBTZ3lMK2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
  "Secret": "key",
  "File": "backups/20250729_141225/oauth2-proxy/oauth2-proxy-resources.yaml",
  "SymlinkFile": "",
  "Commit": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-30T02:05:55Z",
  "Message": "feat: Complete GitLab setup with Keycloak SSO integration and configuration fixes\n\nBREAKING CHANGE: Updated ConfigManager.get_security_config() to return complete security configuration structure\n\n## Summary\nThis commit implements Step 4 of the homelab deployment plan: GitLab setup with SSO integration\nand automated runner deployment. It also fixes critical configuration validation issues that were\npreventing successful deployment.\n\n## Changes\n\n### Configuration Management Fixes\n- Fixed ConfigManager.get_security_config() to return the complete security configuration\n  including pod_security_standards, rbac, network_policies, etc.\n- Updated configuration validation logic to properly check for primary domain at base.primary\n- Fixed MetalLB configuration validation to check for metallb.default_pool\n- Resolved security validation failures that were blocking deployment\n\n### GitLab Deployment\n- Enhanced gitlab-deployment.yaml with comprehensive Keycloak OIDC integration\n- Configured GitLab with optimized resource settings for homelab environment\n- Added proper ingress configuration with SSL/TLS and OAuth2 proxy integration\n- Implemented persistent storage configuration for GitLab data, logs, and config\n\n### GitLab Runner Setup\n- Created gitlab-runner-arc.yaml for Actions Runner Controller deployment\n- Configured runner with Kubernetes executor for scalable CI/CD\n- Added proper RBAC permissions for runner operations\n- Implemented security context and resource limits for runner pods\n\n### Keycloak Integration\n- Configured OpenID Connect provider in GitLab for SSO\n- Set up automatic user provisioning from Keycloak\n- Added proper redirect URIs and client configuration\n- Integrated with homelab-portal client in Keycloak\n\n### Infrastructure Enhancements\n- Added unified deployment orchestration for GitLab components\n- Created proper namespace isolation and network policies\n- Implemented health checks and monitoring integration\n- Added certificate management for GitLab and registry domains\n\n### Portal and Orchestrator Improvements\n- Enhanced portal manager with security metrics and service status\n- Added unified deployment manager for streamlined deployment process\n- Improved configuration management with consolidated config files\n- Added comprehensive security validation framework\n\n## Testing\n- Validated configuration loading with all required keys present\n- Successful dry-run deployment with no validation errors\n- Verified GitLab Keycloak OIDC configuration structure\n- Confirmed runner deployment manifest correctness\n\n## Next Steps\n- Replace GITLAB_RUNNER_TOKEN placeholder with actual registration token\n- Configure GitLab API for automated user/group creation post-deployment\n- Set up GitLab Container Registry with proper authentication\n- Enable GitLab Pages for static site hosting\n\n## Related Issues\n- Fixes configuration validation preventing deployment\n- Implements SSO integration requirements\n- Addresses runner automation needs\n\nCo-authored-by: Agent Mode \u003cagent@warp.dev\u003e",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "8986a1c167fd6de9ae4f9b0b0e11ac3bc87c929d:backups/20250729_141225/oauth2-proxy/oauth2-proxy-resources.yaml:generic-api-key:1305"
 },
 {
  "Description": "",
  "StartLine": 15,
  "EndLine": 15,
  "StartColumn": 11,
  "EndColumn": 46,
  "Match": "secret: aG9tZWxhYi1wb3J0YWwtc2VjcmV0",
  "Secret": "secret",
  "File": "kubernetes/base/oauth2-proxy.yaml",
  "SymlinkFile": "",
  "Commit": "3c9804e5a51e414fcf2d3d88400d9b20f2ba98f9",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-29T04:00:40Z",
  "Message": "Step 3: Establish comprehensive user and admin bootstrap processes\n\n- Integrate Keycloak, OAuth2-proxy, and existing SSO configurations\n- Establish RBAC for all relevant services\n- Create bootstrap automation scripts and Ansible roles\n- Deploy security baseline with network policies and RBAC\n- Configure centralized authentication and authorization framework\n- Set up comprehensive monitoring and health checking systems\n- Implement GPU resource management capabilities\n- Add webhook integration for automated workflows\n- Create deployment orchestration system with validation\n- Establish privilege management for secure operations",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "3c9804e5a51e414fcf2d3d88400d9b20f2ba98f9:kubernetes/base/oauth2-proxy.yaml:generic-api-key:15"
 },
 {
  "Description": "",
  "StartLine": 17,
  "EndLine": 17,
  "StartColumn": 11,
  "EndColumn": 62,
  "Match": "secret: SEQzeUMxN1JmR3VYVGg4dXRHWXNLRGZLYUJ2bDhqUXM=",
  "Secret": "secret",
  "File": "kubernetes/base/oauth2-proxy.yaml",
  "SymlinkFile": "",
  "Commit": "3c9804e5a51e414fcf2d3d88400d9b20f2ba98f9",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-29T04:00:40Z",
  "Message": "Step 3: Establish comprehensive user and admin bootstrap processes\n\n- Integrate Keycloak, OAuth2-proxy, and existing SSO configurations\n- Establish RBAC for all relevant services\n- Create bootstrap automation scripts and Ansible roles\n- Deploy security baseline with network policies and RBAC\n- Configure centralized authentication and authorization framework\n- Set up comprehensive monitoring and health checking systems\n- Implement GPU resource management capabilities\n- Add webhook integration for automated workflows\n- Create deployment orchestration system with validation\n- Establish privilege management for secure operations",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "3c9804e5a51e414fcf2d3d88400d9b20f2ba98f9:kubernetes/base/oauth2-proxy.yaml:generic-api-key:17"
 },
 {
  "Description": "",
  "StartLine": 88,
  "EndLine": 88,
  "StartColumn": 26,
  "EndColumn": 54,
  "Match": "key-annotations=sealedsecrets",
  "Secret": "key",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "e42eee4cdd28a89fd5991d0ff0e3fe26a68cec40",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:26:23Z",
  "Message": "fix: Resolve YAML syntax issues and improve CI/CD pipeline structure\n\n- Fixed multiline YAML syntax issues in .gitlab-ci.yml that were causing parser errors\n- Improved helmfile.yaml structure with proper document separators (---)\n- Fixed Helmfile release dependency references to use proper namespace/release format\n- Removed invalid template references in helmfile.yaml that were causing validation errors\n- Updated deployment script prerequisites validation to work correctly\n- Made Python testing scripts executable and functional\n\nKey improvements:\n- All GitLab CI/CD pipeline YAML files now pass syntax validation\n- Helmfile structure properly separates environments from releases\n- Release dependencies correctly reference namespace/release format\n- Deployment validation scripts provide comprehensive feedback\n- Pipeline is ready for testing once Kubernetes cluster is available\n\nStill needed for full functionality:\n- Environment-specific values files creation\n- Helm chart dependencies building\n- Kubernetes cluster for actual deployment testing",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "e42eee4cdd28a89fd5991d0ff0e3fe26a68cec40:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:88"
 },
 {
  "Description": "",
  "StartLine": 27,
  "EndLine": 27,
  "StartColumn": 6,
  "EndColumn": 40,
  "Match": "-----BEGIN OPENSSH PRIVATE KEY-----",
  "Secret": "OPENSSH",
  "File": "deployments/gitops/argocd/repositories.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 2.5216405,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "private-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/gitops/argocd/repositories.yaml:private-key:27"
 },
 {
  "Description": "",
  "StartLine": 588,
  "EndLine": 588,
  "StartColumn": 35,
  "EndColumn": 59,
  "Match": "key recovery/regeneration",
  "Secret": "key",
  "File": "ansible/AUTHENTICATION_SETUP.md",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:ansible/AUTHENTICATION_SETUP.md:generic-api-key:588"
 },
 {
  "Description": "",
  "StartLine": 87,
  "EndLine": 87,
  "StartColumn": 12,
  "EndColumn": 38,
  "Match": "-----BEGIN PRIVATE KEY-----",
  "Secret": "",
  "File": "helm/environments/secrets-prod.yaml.template",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 0,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "private-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:helm/environments/secrets-prod.yaml.template:private-key:87"
 },
 {
  "Description": "",
  "StartLine": 88,
  "EndLine": 88,
  "StartColumn": 22,
  "EndColumn": 50,
  "Match": "key-annotations=sealedsecrets",
  "Secret": "key",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:88"
 },
 {
  "Description": "",
  "StartLine": 161,
  "EndLine": 161,
  "StartColumn": 41,
  "EndColumn": 72,
  "Match": "TOKEN: AgBi4F8OJSWK+PiTySYZZA9rO",
  "Secret": "TOKEN",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 2.321928,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:161"
 },
 {
  "Description": "",
  "StartLine": 257,
  "EndLine": 257,
  "StartColumn": 10,
  "EndColumn": 39,
  "Match": "key: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "key",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:257"
 },
 {
  "Description": "",
  "StartLine": 284,
  "EndLine": 284,
  "StartColumn": 17,
  "EndColumn": 46,
  "Match": "key: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "key",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:284"
 },
 {
  "Description": "",
  "StartLine": 285,
  "EndLine": 285,
  "StartColumn": 16,
  "EndColumn": 45,
  "Match": "key: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "key",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:285"
 },
 {
  "Description": "",
  "StartLine": 338,
  "EndLine": 338,
  "StartColumn": 17,
  "EndColumn": 48,
  "Match": "TOKEN: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "TOKEN",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 2.321928,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:338"
 },
 {
  "Description": "",
  "StartLine": 339,
  "EndLine": 339,
  "StartColumn": 16,
  "EndColumn": 47,
  "Match": "TOKEN: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "TOKEN",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 2.321928,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:339"
 },
 {
  "Description": "",
  "StartLine": 340,
  "EndLine": 340,
  "StartColumn": 17,
  "EndColumn": 48,
  "Match": "TOKEN: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "TOKEN",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 2.321928,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:340"
 },
 {
  "Description": "",
  "StartLine": 341,
  "EndLine": 341,
  "StartColumn": 21,
  "EndColumn": 50,
  "Match": "KEY: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "KEY",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:341"
 },
 {
  "Description": "",
  "StartLine": 510,
  "EndLine": 510,
  "StartColumn": 50,
  "EndColumn": 77,
  "Match": "secrets/releases/download/v0",
  "Secret": "secret",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:510"
 },
 {
  "Description": "",
  "StartLine": 618,
  "EndLine": 618,
  "StartColumn": 14,
  "EndColumn": 43,
  "Match": "key: AgBy3i4OJSWK+PiTySYZZA9rO",
  "Secret": "key",
  "File": "deployments/security/sealed-secrets-patterns.yaml",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 1.5849625,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:deployments/security/sealed-secrets-patterns.yaml:generic-api-key:618"
 },
 {
  "Description": "",
  "StartLine": 260,
  "EndLine": 260,
  "StartColumn": 46,
  "EndColumn": 73,
  "Match": "secrets/releases/download/v0",
  "Secret": "secret",
  "File": "docs/modernization/migration-guide.md",
  "SymlinkFile": "",
  "Commit": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-28T18:20:52Z",
  "Message": "feat: Add comprehensive GitLab CI/CD pipeline infrastructure\n\nThis commit introduces a complete CI/CD pipeline infrastructure for the homelab project:\n\n### Core Components:\n- **Main Pipeline (.gitlab-ci.yml)**: Multi-stage pipeline with validation, build, security, test, deploy, verify, and notify stages\n- **Modular Configuration**: Separate pipeline modules for different concerns:\n  - .gitlab/ci/security.yml: Security scanning and compliance validation\n  - .gitlab/ci/terraform.yml: Terraform workflow automation\n  - .gitlab/ci/helm.yml: Helm chart validation and deployment\n  - .gitlab/ci/monitoring.yml: Monitoring validation and health checks\n\n### Key Features:\n- **Multi-Environment Support**: Automated staging deployments, manual production deployments\n- **Comprehensive Security**: Trivy scanning, OWASP dependency checks, secrets detection\n- **Testing Framework**: Unit tests, integration tests, security validation\n- **Deployment Automation**: Unified deployment script integration\n- **Monitoring Integration**: Health checks, metrics validation, alerting tests\n- **Rollback Capabilities**: Automated rollback for both environments\n- **Slack Integration**: Deployment notifications and status updates\n\n### Security \u0026 Compliance:\n- Container image scanning\n- Infrastructure as Code security validation\n- License compliance checking\n- CIS Kubernetes benchmark validation\n- Pod Security Standards compliance\n- Network policy validation\n- RBAC validation\n- TLS/mTLS configuration validation",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "7e507c58a42c53db3d3f44c0f6dd425d37a5c614:docs/modernization/migration-guide.md:generic-api-key:260"
 },
 {
  "Description": "",
  "StartLine": 127,
  "EndLine": 127,
  "StartColumn": 64,
  "EndColumn": 92,
  "Match": "secrets/tree/main/helm/sealed",
  "Secret": "secret",
  "File": "ATTRIBUTIONS.md",
  "SymlinkFile": "",
  "Commit": "9d4df38f11b696a7b8226d2590eec141aab9caf5",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "111450100+tzervas@users.noreply.github.com",
  "Date": "2025-07-27T20:36:33Z",
  "Message": "feat: Merge develop branch with infrastructure stabilization and tooling enhancements (#21)\n\nThis comprehensive merge brings significant improvements to the homelab infrastructure\nproject, focusing on deployment stability, security hardening, and development\nworkflow enhancements.\n\n## Infrastructure Stabilization\n- Added K3s deployment stabilization scripts with intelligent network setup\n- Enhanced environment configuration verification and validation\n- Implemented rootless deployment capabilities for improved security\n- Added comprehensive deployment orchestration with dry-run testing\n\n## Testing and Quality Framework\n- Introduced comprehensive testing framework with multiple test modules\n- Added infrastructure health monitoring and service validation\n- Implemented permission verification and rootless compatibility checks\n- Enhanced deployment validation with detailed reporting\n\n## Development Tooling Improvements\n- Streamlined development tooling with UV package management\n- Added Python project configuration (pyproject.toml, mypy.ini)\n- Enhanced pre-commit hooks with security scanning (Bandit)\n- Improved code quality checks with comprehensive linting\n\n## Security Enhancements\n- Integrated Bandit security scanner for Python code analysis\n- Added comprehensive security configuration and best practices\n- Implemented pod security standards for Kubernetes deployments\n- Enhanced privilege management with deployment user roles\n\n## Documentation and Cleanup\n- Consolidated and restructured project documentation\n- Added deployment checklists and implementation guides\n- Cleaned up deprecated deployment components and unused files\n- Removed outdated bastion host patterns in favor of direct access\n\n## Key Changes\n- Added: K3s stabilization scripts, comprehensive testing framework\n- Enhanced: Environment validation, security scanning, code quality\n- Removed: Deprecated playbooks, unused cache files, obsolete configs\n- Improved: Documentation structure, deployment processes, tooling\n\n## Breaking Changes\n- Removed legacy deployment playbooks (deploy-*.yml)\n- Updated Ansible configuration structure\n- Modified pre-commit hook configuration\n\nRelated PRs: #17, #18, #19, #20",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "9d4df38f11b696a7b8226d2590eec141aab9caf5:ATTRIBUTIONS.md:generic-api-key:127"
 },
 {
  "Description": "",
  "StartLine": 127,
  "EndLine": 127,
  "StartColumn": 64,
  "EndColumn": 92,
  "Match": "secrets/tree/main/helm/sealed",
  "Secret": "secret",
  "File": "ATTRIBUTIONS.md",
  "SymlinkFile": "",
  "Commit": "9d7e183053adb4387d42fb1afa264a23d4ce63c4",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "111450100+tzervas@users.noreply.github.com",
  "Date": "2025-07-27T02:46:56Z",
  "Message": "Simplify Ansible configuration and remove unused components (#18)\n\n* feat: Simplify Ansible configuration and remove environment dependencies\n\n- Change stdout/stderr callbacks to yaml for better readability\n- Disable become_ask_pass for automated deployments\n- Remove bastion host configuration patterns\n- Replace environment variable lookups with hardcoded values for core settings\n- Remove complex cluster node configurations\n- Streamline VM configuration with direct values\n\nThis simplifies the Ansible setup by removing dynamic environment\ndependencies and complex bastion patterns, making it more suitable\nfor straightforward homelab deployments.\n\n* fix(ansible): implement rootless deployment configuration\n\n- Configure ansible.cfg with become=False by default for security\n- Add privilege escalation configuration in group_vars/all/privilege.yml\n- Define tasks requiring root vs deployment user privileges\n- Implement least privilege principle for deployment operations\n- Enhance pre-commit configuration with comprehensive hooks for code quality\n\nThis addresses code review feedback about become_ask_pass=False and\nestablishes foundation for secure rootless deployment model.\n\n* feat(ansible): add deployment-user role for rootless operations\n\n- Create dedicated deployment user with minimal sudo permissions\n- Configure SSH keys and authorized_keys for secure access\n- Set up deployment directories with proper ownership\n- Configure environment for rootless container operations\n- Add playbook for initial deployment user setup\n\nThis role enables secure rootless deployment by creating a dedicated\nuser with only the necessary permissions for deployment tasks.\n\n* feat(helm): add security contexts for rootless deployment\n\n- Configure pod security contexts with non-root users\n- Add security context defaults to all Helm chart values\n- Drop all capabilities except those explicitly needed\n- Enable read-only root filesystems where possible\n- Add pod security standards configuration\n- Update environment-specific values with security settings\n\nThese changes ensure all deployed workloads run with minimal\nprivileges following Kubernetes security best practices.\n\n* feat(scripts): add deployment scripts with privilege management\n\n- Add deploy-with-privileges.sh for managed privilege escalation\n- Add setup-secure-deployment.sh for initial server configuration\n- Add deploy-rootless.sh for fully rootless deployments\n- Implement secure environment and secret handling\n- Add comprehensive error handling and logging\n\nThese scripts enable secure deployment workflows with proper\nprivilege separation and audit trails.\n\n* feat(testing): enhance testing framework for rootless deployment\n\n- Add rootless_compatibility.py for security context validation\n- Add permission_verifier.py to check deployment permissions\n- Add validate_deployment.py for comprehensive deployment validation\n- Update existing test modules with security enhancements\n- Add issue_tracker.py for test result tracking\n- Improve error handling and logging across all modules\n\nThese enhancements ensure the testing framework validates both\nfunctionality and security requirements for rootless deployments.\n\n* chore(gitignore): update with comprehensive ignore patterns\n\n- Add Python cache and build directories\n- Add test coverage and temporary files\n- Add virtual environment directories\n- Add pre-commit and security scanning outputs\n- Add temporary script files and archives\n- Ensure sensitive files are properly ignored\n\nThis creates a cleaner repository by preventing temporary,\ncache, and generated files from being tracked.\n\n* fix: remove files that should be gitignored\n\n- Remove node_modules directory\n- Remove temporary script files\n- Remove .secrets.baseline\n- Remove code review markdown files\n\nThese files are now properly listed in .gitignore and\nshould not be tracked in the repository.\n\n* fix(keycloak): resolve duplicate postgresql configuration\n\n- Remove duplicate postgresql section that was causing YAML errors\n- Keep consolidated configuration under single postgresql key\n- Maintain security contexts under primary.podSecurityContext\n- Preserve auth settings alongside security configuration\n\nThis fixes the 'Map keys must be unique' error while maintaining\nall necessary PostgreSQL security and authentication settings.\n\n* chore: update project files with rootless deployment enhancements\n\n- Update README.md with enhanced documentation structure\n- Add security contexts to GitLab values configuration\n- Fix secret detection false positive with pragma comment\n- Create .env.template for environment variable management\n- Update pyproject.toml with project metadata and dependencies\n- Fix file permissions (remove executable from .j2 template)\n- Apply pre-commit formatting fixes across all files\n- Add comprehensive documentation files for rootless deployment\n- Clean up temporary git operation scripts\n\nThese changes support the rootless deployment initiative and\nimprove project documentation and configuration management.\n\n* docs: update documentation structure and improve markdown compliance\n\n- Add .markdownlint.json configuration file\n- Update README.md with clearer and more concise content\n- Migrate BASTION-HOST-SECURITY.md content to docs/security/\n- Improve quick-start.md formatting and clarity\n- Update .gitignore to exclude development artifacts\n- Remove unused .claude configuration files\n\nThese changes improve documentation readability and maintainability while\nensuring better compliance with markdown linting rules.\n\n* docs: add CHANGELOG.md with semantic versioning history\n\n- Document version history from 0.1.0 to current 0.3.0\n- Follow Keep a Changelog format\n- Include unreleased section for future changes\n- Add comparison links between versions\n\n* docs: sanitize security best practices documentation\n\n- Replace specific IPs with generic defaults\n- Standardize username references\n- Improve formatting consistency\n- Expand placeholder sections with detailed content\n- Enhance network security documentation\n- Add authentication and monitoring details\n\n* docs: enhance environment template with better documentation\n\n- Replace specific values with generic examples\n- Add detailed section headers and separators\n- Include helpful comments and requirements\n- Add examples for password generation\n- Document backup configuration options\n- Mark required vs optional fields\n- Improve overall template readability\n\n* refactor: use environment variables consistently across configurations\n\nValues Template Changes:\n- Move all configurable values to environment variables\n- Add comprehensive section headers and documentation\n- Use consistent variable naming and structure\n- Add validation and requirement notes\n- Improve template readability\n\nPython Config Changes:\n- Add python-dotenv integration for loading environment variables\n- Update service endpoints to use environment variables\n- Add environment variables for namespaces and timeouts\n- Improve configuration validation and defaults\n- Add post-init validation and logging\n\n* fix: improve file handling in code quality script\n\n- Remove hardcoded file limits for Python and shell files\n- Make file limits configurable via environment or CLI options\n- Add better file exclusion patterns\n- Add more informative logging\n- Improve feedback about number of files being checked\n- Address sourcery-ai bug_risk report about file limits\n\nAddresses issue: Limiting to 100 Python files may skip files in larger projects.\n\n* refactor: enhance configuration and security documentation\n\nCore Improvements:\n- Make configuration more environment-driven\n- Enhance security documentation with best practices\n- Improve code quality tools and validation\n- Add changelog for better version tracking\n\nConfiguration Changes:\n- Update Python configuration to use environment variables\n- Add dotenv support for better config management\n- Make service endpoints configurable\n- Add namespace configuration flexibility\n- Improve validation and error handling\n\nSecurity Documentation:\n- Sanitize security best practices guide\n- Add network security section\n- Enhance authentication documentation\n- Add monitoring best practices\n- Use generic defaults for examples\n\nCode Quality Improvements:\n- Remove hardcoded file limits in quality checks\n- Add configurable file handling options\n- Improve feedback and logging\n- Add better path exclusions\n\nVersion Control:\n- Add CHANGELOG.md following Keep a Changelog format\n- Document versions 0.1.0 through 0.3.0\n- Add unreleased section for future changes\n- Include comparison links between versions\n\nTesting Framework:\n- Update configuration handling\n- Add environment-based defaults\n- Improve validation routines\n- Make namespace handling more flexible\n\n* fix: improve JSON validation in code quality script\n\nChanges:\n- Add configurable JSON file limit with MAX_JSON_FILES\n- Add --max-json-files CLI option\n- Improve JSON file validation feedback\n- Add more robust error handling\n- Add better path exclusions\n- Add file count reporting\n- Add verbose mode details\n- Improve overall JSON validation robustness\n\nJSON Validation Improvements:\n- Add support for configurable file limits\n- Maintain consistency with Python/Shell limits\n- Add better error suppression\n- Add file count tracking\n- Add validation statistics\n- Add limit warnings\n\nThis change addresses the sourcery-ai feedback about inconsistent\nfile type handling and improves the overall JSON validation process.\n\n* fix: improve test failure handling in code quality script\n\nTest Framework Changes:\n- Add fail-fast mode for strict test handling\n- Add configurable failure behavior\n- Add better error reporting and logging\n- Add explicit exit codes for test failures\n- Default to strict mode in CI environments\n\nConfiguration Improvements:\n- Add FAIL_FAST environment variable\n- Add --fail-fast CLI option\n- Add --no-fail-fast CLI option\n- Make CI mode auto-enable fail-fast\n- Add better mode documentation\n\nError Handling:\n- Add stricter checks in CI/fail-fast mode\n- Exit with error on test failures\n- Add better failure messages\n- Add mode-specific handling\n- Show detailed status output\n\nThis change addresses the sourcery-ai feedback about test failures\nonly logging warnings. Now test failures will properly fail the script,\nespecially in CI environments, to prevent deploying with failing tests.\n\n* fix: improve deployment script robustness\n\nScript Improvements:\n- Add better argument validation\n- Add root-required command handling\n- Improve sudo permissions handling\n- Add stricter tool requirements\n\nArgument Handling:\n- Add validation for all options\n- Add checking for required values\n- Add better error messages\n- Add command validation\n\nRoot Access:\n- Allow root for initial setup\n- Block root for other commands\n- Add better guidance for users\n- Document root requirements\n\nSudo Handling:\n- Add interactive sudo fallback\n- Add better permission checking\n- Add guidance for sudoers setup\n- Add command-specific checks\n\nTool Requirements:\n- Block on missing tools\n- Add installation guidance\n- Add clear error messages\n- List all missing tools\n\nThis addresses multiple sourcery-ai suggestions about improving\nargument handling, root access management, sudo permissions,\nand required tool validation.\n\n* fix: improve Ansible command handling in deployment script\n\nCommand Handling:\n- Fix array expansion for Ansible commands\n- Add detailed command debugging\n- Add better error handling\n- Preserve exit codes\n\nDebug Improvements:\n- Add command argument logging\n- Add argument count display\n- Add per-argument inspection\n- Add verbose debug mode\n\nError Handling:\n- Add exit code preservation\n- Add better error messages\n- Add command validation\n- Add failure details\n\nThis addresses the sourcery-ai issue about Ansible command\narray expansion potentially combining arguments incorrectly\nwhen spaces are present.\n\n* feat(deployment): add deployment validator and optimize test framework\n\nAdd deployment validation script and test framework improvements:\n\nTesting Framework Improvements:\n- Optimize test counting logic using bool() with sum() calls in test reporting\n- Add microseconds to test output filenames to prevent collisions\n- Implement bool() optimization in test summary counter operations\n- Clean up test result formatting and logging\n- Make test counters more efficient with direct boolean counting\n\nDeployment Validator:\n- Add validate_deployment.py script for testing deployment readiness\n- Implement rootless deployment verification\n- Add security context validation for K8s resources\n- Add service communication testing\n- Add permission validation for deployment user\n\nInternal Changes:\n- Remove .pyc files from git history and update .gitignore\n- Clean up import statements across test modules\n- Add type hints and docstrings for better code clarity\n- Standardize error handling patterns\n\nTesting:\n- Added unit tests for new validator components\n- Verified deployment validation logic\n- Tested permission checking functionality\n- Validated security context verification\n\n* chore: improve Python cache ignore patterns and remove __pycache__ files\n\n- Update .gitignore to explicitly ignore all __pycache__ directories\n- Remove tracked __pycache__ directories and their contents\n- Add more comprehensive Python bytecode ignore patterns\n\n* chore: enhance Python cache ignore patterns\n\nAdd comprehensive Python bytecode ignore patterns:\n- Match any __pycache__ directory at any depth\n- Cover all Python bytecode file patterns\n- Ensure no compiled Python files are tracked\n\n* fix: optimize list operations and improve execution safety\n\n1. .gitignore:\n   - Add comprehensive patterns for Python cache files\n   - Ensure __pycache__ directories are never tracked\n   - Add specific patterns for version-specific cache files\n\n2. deploy-with-privileges.sh:\n   - Fix array expansion to properly handle command arguments\n   - Add proper escaping for paths and variables\n   - Execute ansible-playbook with array expansion\n\n3. integration_tester.py:\n   - Optimize list operations using extend()\n   - Gather endpoint tests before adding to results\n   - Improve code readability and maintainability\n\nThis commit addresses code quality issues and improves execution safety across\nmultiple components of the deployment system.\n\n* fix: enhance subprocess command execution security\n\nIn permission_verifier.py:\n- Add proper argument escaping using shlex.quote()\n- Add length validation for command arguments\n- Explicitly disable shell interpretation\n- Enhance error handling around command execution\n\nThese changes prevent potential command injection vulnerabilities\nby ensuring all arguments are properly escaped and validated before\nbeing passed to subprocess.run().",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "9d7e183053adb4387d42fb1afa264a23d4ce63c4:ATTRIBUTIONS.md:generic-api-key:127"
 },
 {
  "Description": "",
  "StartLine": 127,
  "EndLine": 127,
  "StartColumn": 64,
  "EndColumn": 92,
  "Match": "secrets/tree/main/helm/sealed",
  "Secret": "secret",
  "File": "ATTRIBUTIONS.md",
  "SymlinkFile": "",
  "Commit": "47ecab980ec2b88fccd62d12958b135c8fe7d5ad",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-27T00:42:04Z",
  "Message": "chore: update project files with rootless deployment enhancements\n\n- Update README.md with enhanced documentation structure\n- Add security contexts to GitLab values configuration\n- Fix secret detection false positive with pragma comment\n- Create .env.template for environment variable management\n- Update pyproject.toml with project metadata and dependencies\n- Fix file permissions (remove executable from .j2 template)\n- Apply pre-commit formatting fixes across all files\n- Add comprehensive documentation files for rootless deployment\n- Clean up temporary git operation scripts\n\nThese changes support the rootless deployment initiative and\nimprove project documentation and configuration management.",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "47ecab980ec2b88fccd62d12958b135c8fe7d5ad:ATTRIBUTIONS.md:generic-api-key:127"
 },
 {
  "Description": "",
  "StartLine": 115,
  "EndLine": 115,
  "StartColumn": 63,
  "EndColumn": 91,
  "Match": "secrets/tree/main/helm/sealed",
  "Secret": "secret",
  "File": "ATTRIBUTIONS.md",
  "SymlinkFile": "",
  "Commit": "1f25ba396408bbc39ab6497cf8f92dc6eb54e6b8",
  "Entropy": 2.251629,
  "Author": "Tyler Zervas",
  "Email": "tz-dev@vectorweight.com",
  "Date": "2025-07-26T01:23:52Z",
  "Message": "feat: initial infrastructure setup (#4)\n\n- Added network configuration documentation\n- Added K3s setup documentation\n- Added Helm charts structure\n- Added Kubernetes base configurations\n- Added license and attribution files",
  "Tags": [],
  "RuleID": "generic-api-key",
  "Fingerprint": "1f25ba396408bbc39ab6497cf8f92dc6eb54e6b8:ATTRIBUTIONS.md:generic-api-key:115"
 }
]
