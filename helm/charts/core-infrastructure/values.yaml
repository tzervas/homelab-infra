global:
  domain: "homelab.local"
  storageClass: "longhorn"
  timezone: "UTC"
  
  # Enable TLS by default
  tls:
    enabled: true
    issuer: "letsencrypt-staging"
    secretName: "tls-secret"

  # Security contexts for rootless deployment (inherited from security-baseline)
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL

# Enable security baseline for all components
security-baseline:
  enabled: true
  
  # Override global settings for core infrastructure
  global:
    environment: "development"  # Will be overridden by environment-specific values
    
  # Enable network policies for core infrastructure
  networkPolicies:
    defaultDeny:
      enabled: true
    allowDNS:
      enabled: true
    allowKubeAPI:
      enabled: true
      
  # RBAC configuration
  rbac:
    create: true
    serviceAccount:
      create: true
      automountServiceAccountToken: false

metallb:
  enabled: true
  controller:
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      runAsGroup: 65534
      fsGroup: 65534
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 100Mi
  speaker:
    securityContext:
      runAsNonRoot: false  # Speaker needs root for network operations
      runAsUser: 0
      capabilities:
        drop:
          - ALL
        add:
          - NET_ADMIN
          - NET_RAW
          - SYS_ADMIN
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 100Mi

cert-manager:
  enabled: true
  installCRDs: true
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  webhook:
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  cainjector:
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

ingress-nginx:
  enabled: true
  controller:
    containerSecurityContext:
      runAsNonRoot: false  # Nginx controller needs root for port binding
      runAsUser: 101
      runAsGroup: 101
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
      seccompProfile:
        type: RuntimeDefault
    service:
      type: LoadBalancer
      loadBalancerIP: ""  # Will be assigned by MetalLB
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    config:
      use-forwarded-headers: "true"
      compute-full-forwarded-for: "true"
      use-proxy-protocol: "false"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    admissionWebhooks:
      enabled: true
      containerSecurityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi

sealed-secrets:
  enabled: true
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
