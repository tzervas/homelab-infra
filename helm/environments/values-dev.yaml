global:
  domain: "dev.homelab.local"
  environment: "development"
  
  # Development security contexts - baseline enforcement
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
  
  # Pod security standards - relaxed for development
  podSecurityStandards:
    enforce: "baseline"
    audit: "restricted"
    warn: "restricted"

# Resource constraints for development
resources:
  limits:
    cpu: "1000m"
    memory: "2Gi"
  requests:
    cpu: "100m"
    memory: "128Mi"

# MetalLB Configuration for Development
metallb:
  configInline:
    address-pools:
      - name: default
        protocol: layer2
        addresses:
          - 192.168.25.200-192.168.25.210  # Smaller range for dev

# Reduced retention for development
kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
      retention: "7d"
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 10Gi  # Smaller storage for dev

loki:
  singleBinary:
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      runAsGroup: 10001
      fsGroup: 10001
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    persistence:
      size: 5Gi  # Smaller storage for dev

grafana:
  securityContext:
    runAsNonRoot: true
    runAsUser: 472
    runAsGroup: 472
    fsGroup: 472
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
  persistence:
    size: 2Gi  # Smaller storage for dev
  # Use environment variable for admin password
  adminPassword: "${GRAFANA_ADMIN_PASSWORD:-devadmin}"  # Default fallback for development only

# Longhorn settings for development
longhorn:
  defaultSettings:
    defaultReplicaCount: 1  # Single replica for dev
    storageOverProvisioningPercentage: 500

# Disable resource-intensive features in development
ingress-nginx:
  controller:
    containerSecurityContext:
      runAsNonRoot: false  # Nginx needs root for port binding
      runAsUser: 101
      runAsGroup: 101
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
      seccompProfile:
        type: RuntimeDefault
    metrics:
      enabled: false  # Disable metrics in dev
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
