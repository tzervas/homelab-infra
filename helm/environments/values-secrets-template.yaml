# Sensitive Values Template
#
# IMPORTANT:
# 1. Copy to values-secrets.yaml and update with actual values
# 2. Never commit values-secrets.yaml to version control
# 3. All values should be sourced from environment variables
# 4. Default values are provided as fallbacks only
#
# Required environment variables are documented in .env.template

#------------------------------------------------------------------------------
# Global Settings
#------------------------------------------------------------------------------
global:
  # Domain configuration from environment
  domain: "${HOMELAB_DOMAIN}"  # Required: Main domain for services
  devDomain: "${HOMELAB_DEV_DOMAIN}"  # Required: Development environment domain
  stagingDomain: "${HOMELAB_STAGING_DOMAIN}"  # Required: Staging environment domain

#------------------------------------------------------------------------------
# GitLab Configuration
#------------------------------------------------------------------------------
gitlab:
  global:
    # Database credentials from environment
    psql:
      password: "${GITLAB_DB_PASSWORD}"  # Required: PostgreSQL password

    # Admin credentials
    initialRootPassword:
      secret: gitlab-initial-root-password
      key: password
      value: "${GITLAB_ROOT_PASSWORD}"  # Required: Initial admin password

    # Service endpoints
    hosts:
      domain: "${GITLAB_DOMAIN:-${HOMELAB_DOMAIN}}"
      https: true

    # SMTP configuration from environment
    smtp:
      enabled: true
      address: "${SMTP_SERVER}"  # Required: SMTP server address
      port: "${SMTP_PORT:-587}"  # Default: 587 for STARTTLS
      user_name: "${SMTP_USERNAME}"  # Required: SMTP username
      password:
        secret: gitlab-smtp-password
        key: password
        value: "${SMTP_PASSWORD}"  # Required: SMTP password
      domain: "${SMTP_DOMAIN}"  # Required: Email domain
      authentication: "login"
      starttls_auto: true

#------------------------------------------------------------------------------
# Keycloak Configuration
#------------------------------------------------------------------------------
keycloak:
  # Admin credentials from environment
  auth:
    adminUser: "${KEYCLOAK_ADMIN_USER:-admin}"  # Default: admin
    adminPassword: "${KEYCLOAK_ADMIN_PASSWORD}"  # Required: Admin password

  # Database credentials
  postgresql:
    auth:
      postgresPassword: "${KEYCLOAK_DB_PASSWORD}"  # Required: PostgreSQL admin password
      password: "${KEYCLOAK_DB_PASSWORD}"  # Required: Application database password

  # Service configuration
  service:
    type: ClusterIP

  # Ingress configuration
  ingress:
    hostname: "${KEYCLOAK_DOMAIN:-keycloak.${HOMELAB_DOMAIN}}"

#------------------------------------------------------------------------------
# Monitoring Configuration
#------------------------------------------------------------------------------
kube-prometheus-stack:
  # Grafana settings
  grafana:
    adminUser: "${GRAFANA_ADMIN_USER:-admin}"  # Default: admin
    adminPassword: "${GRAFANA_ADMIN_PASSWORD}"  # Required: Admin password

    # Service configuration
    service:
      type: ClusterIP

    # Ingress configuration
    ingress:
      hostname: "${GRAFANA_DOMAIN:-grafana.${HOMELAB_DOMAIN}}"

  # Prometheus settings
  prometheus:
    ingress:
      hostname: "${PROMETHEUS_DOMAIN:-prometheus.${HOMELAB_DOMAIN}}"

#------------------------------------------------------------------------------
# TLS Configuration
#------------------------------------------------------------------------------
cert-manager:
  # Namespace configuration
  global:
    leaderElection:
      namespace: "${CERT_MANAGER_NAMESPACE:-cert-manager}"  # Default: cert-manager

  # ACME configuration
  clusterIssuer:
    email: "${TLS_EMAIL}"  # Required: Contact email for Let's Encrypt
    # Production vs Staging determined by environment
    server: "${LETSENCRYPT_SERVER:-https://acme-v02.api.letsencrypt.org/directory}"

#------------------------------------------------------------------------------
# Ingress Configuration
#------------------------------------------------------------------------------
ingress-nginx:
  controller:
    # SSL certificate configuration
    extraArgs:
      default-ssl-certificate: "${TLS_NAMESPACE:-default}/${TLS_SECRET_NAME:-homelab-tls}"

#------------------------------------------------------------------------------
# Storage Configuration
#------------------------------------------------------------------------------
longhorn:
  # Persistence configuration
  persistence:
    defaultClass: true
    defaultClassReplicaCount: "${STORAGE_REPLICA_COUNT:-3}"  # Default: 3 replicas

  # Backup configuration
  defaultSettings:
    backupTarget: "${LONGHORN_BACKUP_TARGET}"  # Optional: S3 or NFS backup target
    backupTargetCredentialSecret: "${LONGHORN_BACKUP_SECRET}"  # Required if using S3

#------------------------------------------------------------------------------
# Load Balancer Configuration
#------------------------------------------------------------------------------
metallb:
  # Layer 2 configuration
  configInline:
    address-pools:
      - name: "${METALLB_POOL_NAME:-default}"  # Default: default
        protocol: layer2
        addresses:
          - "${METALLB_IP_RANGE}"  # Required: IP range for load balancer
