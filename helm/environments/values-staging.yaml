global:
  domain: "staging.homelab.local"
  environment: "staging"
  
  # TLS Configuration
  tls:
    enabled: true
    issuer: "letsencrypt-staging"

  # Security contexts for staging environment (restricted profile)
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL

  # Pod security standards - baseline for staging
  podSecurityStandards:
    enforce: "baseline"
    audit: "baseline"
    warn: "baseline"

# Moderate resource allocation for staging
resources:
  limits:
    cpu: "2000m"
    memory: "4Gi"
  requests:
    cpu: "200m"
    memory: "256Mi"

# MetalLB Configuration for Staging
metallb:
  configInline:
    address-pools:
      - name: default
        protocol: layer2
        addresses:
          - 192.168.25.220-192.168.25.235

# Moderate retention for staging
kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
      retention: "15d"
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 25Gi

loki:
  singleBinary:
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      runAsGroup: 10001
      fsGroup: 10001
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    persistence:
      size: 10Gi

grafana:
  securityContext:
    runAsNonRoot: true
    runAsUser: 472
    runAsGroup: 472
    fsGroup: 472
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
  persistence:
    size: 5Gi
  # Admin password from environment variable
  adminPassword: "${GRAFANA_ADMIN_PASSWORD}"

# Longhorn settings for staging (production-like)
longhorn:
  defaultSettings:
    defaultReplicaCount: 2
    storageOverProvisioningPercentage: 300

# Enable monitoring in staging
ingress-nginx:
  controller:
    containerSecurityContext:
      runAsNonRoot: false  # Nginx needs root for port binding
      runAsUser: 101
      runAsGroup: 101
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
          - CHOWN
          - SETGID
          - SETUID
      seccompProfile:
        type: RuntimeDefault
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
