---
apiVersion: v1
kind: Namespace
metadata:
  name: - jupyter
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: - jupyter-data
  namespace: jupyter
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: - jupyter-config
  namespace: jupyter
data:
  jupyter_server_config.py: |
    c.ServerApp.ip = '0.0.0.0'
    c.ServerApp.port = 8888
    c.ServerApp.open_browser = False
    c.ServerApp.allow_root = True
    c.ServerApp.token = ''
    c.ServerApp.password = ''
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: - jupyterlab
  namespace: jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: - jupyterlab
  template:
    metadata:
      labels:
        app: - jupyterlab
    spec:
      containers:
      - name: - jupyterlab
        image: jupyter/scipy-notebook:latest
        ports:
        - containerPort: 8888
        env:
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        - name: JUPYTER_TOKEN
          value: ""
        - name: JUPYTER_PASSWORD
          value: ""
        - name: GRANT_SUDO
          value: "yes"
        - name: CHOWN_HOME
          value: "yes"
        - name: CHOWN_HOME_OPTS
          value: "-R"
        volumeMounts:
        - name: - jupyter-data
          mountPath: /home/jovyan/work
        - name: - jupyter-config
          mountPath: /home/jovyan/.jupyter
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        command:
          - "start-notebook.sh"
          - "--ServerApp.ip=0.0.0.0"
          - "--ServerApp.port=8888"
          - "--ServerApp.token=''"
          - "--ServerApp.password=''"
          - "--ServerApp.allow_root=True"
      volumes:
      - name: - jupyter-data
        persistentVolumeClaim:
          claimName: jupyter-data
      - name: - jupyter-config
        configMap:
          name: - jupyter-config
---
apiVersion: v1
kind: Service
metadata:
  name: - jupyterlab
  namespace: jupyter
spec:
  selector:
    app: - jupyterlab
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: - jupyter-https-ingress
  namespace: jupyter
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    cert-manager.io/cluster-issuer: "homelab-ca-issuer"
    # OAuth2 Proxy annotations
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local:4180/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://homelab.local/oauth2/start?rd=$scheme://$best_http_host$request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - jupyter.homelab.local
    secretName: jupyter-tls-cert
  rules:
  - host: jupyter.homelab.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: - jupyterlab
            port:
              number: 8888
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: - jupyter-tls-cert
  namespace: jupyter
spec:
  secretName: jupyter-tls-cert
  issuerRef:
    name: homelab-ca-issuer
    kind: ClusterIssuer
  commonName: jupyter.homelab.local
  dnsNames:
  - jupyter.homelab.local
