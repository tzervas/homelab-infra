---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitoring
data:
  grafana.ini: |
    [server]
    domain = grafana.homelab.local
    root_url = https://grafana.homelab.local
    serve_from_sub_path = false

    [security]
    admin_user = admin
    admin_password = admin
    allow_embedding = true
    disable_initial_admin_creation = false

    [auth]
    disable_login_form = false
    disable_signout_menu = false
    oauth_auto_login = false

    [auth.generic_oauth]
    enabled = true
    name = Keycloak
    allow_sign_up = true
    client_id = grafana
    client_secret = grafana-client-secret
    scopes = openid profile email roles
    empty_scopes = false
    auth_url = https://auth.homelab.local/realms/homelab/protocol/openid-connect/auth
    token_url = https://auth.homelab.local/realms/homelab/protocol/openid-connect/token
    api_url = https://auth.homelab.local/realms/homelab/protocol/openid-connect/userinfo
    allowed_domains = homelab.local
    team_ids =
    allowed_organizations =
    role_attribute_path = contains(roles[*], 'grafana-admin') && 'Admin' || contains(roles[*], 'grafana-editor') && 'Editor' || 'Viewer'
    role_attribute_strict = false
    groups_attribute_path = groups
    team_ids_attribute_path =
    login_attribute_path = preferred_username
    name_attribute_path = name
    email_attribute_path = email
    id_token_attribute_name =
    use_pkce = true
    allow_assign_grafana_admin = true
    skip_org_role_sync = false

    [auth.generic_oauth.group_mapping]
    platform-admins = "Admin"
    developers = "Editor"
    users = "Viewer"

    [users]
    allow_sign_up = true
    auto_assign_org = true
    auto_assign_org_id = 1
    auto_assign_org_role = Viewer
    verify_email_enabled = false

    [log]
    mode = console
    level = info

    [log.console]
    format = json
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-oauth-secret
  namespace: monitoring
type: Opaque
stringData:
  client-secret: grafana-client-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:11.1.3
        ports:
        - containerPort: 3000
        env:
        - name: GF_PATHS_CONFIG
          value: /etc/grafana/grafana.ini
        - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: grafana-oauth-secret
              key: client-secret
        # Allow insecure connections for internal Keycloak communication
        - name: GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE
          value: "true"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-data
      - name: grafana-config
        configMap:
          name: grafana-config
